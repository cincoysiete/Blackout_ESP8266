// LIBRERIAS
  #include <ESP8266WiFi.h>
  #include <ESP8266WebServer.h>
  #include <WiFiClientSecure.h>
  #include <Wire.h>
  #include <Adafruit_GFX.h>
  #include <Adafruit_SSD1306.h>
  #include <NTPClient.h>
  #include <WiFiUdp.h>
  #include <UniversalTelegramBot.h>
  #include <FS.h>
  #include <LittleFS.h>

// CONFIGURACION DE LA PANTALLA OLED
  #define SCREEN_WIDTH 128
  #define SCREEN_HEIGHT 64
  #define OLED_RESET    -1
  #define SCREEN_ADDRESS 0x3C
  Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// CONFIGURACION NTP PARA RELOJ
  WiFiUDP ntpUDP;
  NTPClient timeClient(ntpUDP, "pool.ntp.org", 3600, 60000);

// DESPLIEGA EL SERVIDOR LOCAL
  ESP8266WebServer server(80);

// INICIALIZACION DE VARIABLES
  unsigned long lastConnectionTime = 0;
  unsigned long offlineMinutes = 0;
  bool wasConnected = false;
  bool shouldSendHello = true;
  unsigned long lastHourlyMessageTime = 0;
  const int MAX_CONFIG_LENGTH = 128;
  char ssid[MAX_CONFIG_LENGTH];
  char password[MAX_CONFIG_LENGTH];
  char* serverUrl;
  unsigned long hourlyInterval;
  String desconectadoWifi;
  String desconectadoLuz;
  String conectado;
  unsigned long control;
  String telegramo;
  #include "blackout.h"
  WiFiClientSecure clientTelegram;
  UniversalTelegramBot bot(BOT_TOKEN, clientTelegram);

// PROTOTIPOS DE FUNCIONES
  void handleFavicon();
  void handleRoot();
  void handleStatus();
  void handleRestart();
  void handleGetLastSendTime();
  void sendToServer(String message);
  void connectToWiFi();
  void sendTelegramMessage(String message);
  void loadConfig(); 
  void saveConfig();
  void handleSave();
  String obtenerHoraFormateada();
  String urlEncode(String str);


void setup() {
  Serial.begin(115200);

  if (!LittleFS.begin()) {
    Serial.println("Error al montar LittleFS");
    return;
  }
  Serial.println("LittleFS montado correctamente");

  // LittleFS.remove("/config.txt");

  loadConfig();

  server.on("/favicon.ico", handleFavicon);

  configTime(0, 0, "pool.ntp.org");
  setenv("TZ", "CET-1CEST-2,M3.5.0/02:00:00,M10.5.0/03:00:00", 1);
  tzset();

  timeClient.begin();
  timeClient.update();

  connectToWiFi();
  server.on("/", handleRoot);
  server.on("/status", handleStatus);
  server.on("/restart", handleRestart);
  server.on("/getLastSendTime", handleGetLastSendTime);
  server.on("/save", handleSave);  // Nueva: Para guardar la configuracion
  server.begin();

  configTime(0, 0, "pool.ntp.org");

  clientTelegram.setInsecure(); // Solo para desarrollo - no usar en produccion

  // MOSTRAMOS INFO EN LA LCD. BLACKOUT
  Wire.begin();
  display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS);
  display.clearDisplay();
  display.setRotation(0);
  display.setTextSize(2);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 0);
  display.println("blackout");
  display.display();
}

void loop() {
  timeClient.update();
  String horaActual = obtenerHoraFormateada();

  // MOSTRAMOS INFO EN LA LCD. HORA
  display.setTextSize(2);
  display.setCursor(0, 50);
  display.setTextColor(WHITE);
  display.fillRect(0, 50, 150, 20, BLACK);
  display.println(horaActual);
  display.display();
  display.setTextSize(1);
  display.setCursor(0, 25);
  display.fillRect(0, 25, 100, 10, BLACK);
  display.println(WiFi.localIP().toString());
  display.display();

  server.handleClient();
  bool isConnected = WiFi.status() == WL_CONNECTED;

  if (isConnected) {
    if (!wasConnected) {
      if (offlineMinutes > 0) {
        sendToServer("nowifi;" + desconectadoWifi + ";" + calcularTiempoSinLuz());
        sendTelegramMessage("ESP: " + desconectadoWifi + " " + calcularTiempoSinLuz());
        offlineMinutes = 0;
      }
      wasConnected = true;
    }

    // Enviar "conectado" cada cierto tiempo
    if (millis() - lastHourlyMessageTime >= hourlyInterval) {
      sendToServer("Bien;"+conectado+";;"+telegramo);
      sendTelegramMessage("ESP: " + conectado);
      lastHourlyMessageTime = millis();
    }

    if (millis() - lastConnectionTime >= control || shouldSendHello) {
      if (shouldSendHello) {
        sendToServer("noluz;" + desconectadoLuz + ";" + calcularTiempoSinLuz());
        // sendToServer("telegramo;"+telegramo);
        sendTelegramMessage("ESP: " + desconectadoLuz + " " + calcularTiempoSinLuz());
        shouldSendHello = false;
      } else {
        sendToServer("Conectado;ðŸŸ¢Conectado;;"+telegramo);
        guardarHoraConexion();
        delay(1000);
      }
      lastConnectionTime = millis();
    }
  } else {
    wasConnected = false;
    static unsigned long lastMinuteCheck = 0;
    if (millis() - lastMinuteCheck >= control) {
      offlineMinutes++;
      lastMinuteCheck = millis();

    }

    static unsigned long lastReconnectAttempt = 0;
    if (millis() - lastReconnectAttempt >= (control / 2)) {
      lastReconnectAttempt = millis();
      connectToWiFi();
    }

    display.setTextSize(1);
    display.setCursor(0, 25);
    display.fillRect(0, 25, 100, 10, BLACK);
    display.println("Desconectado");
    display.display();
  }
}

// ENVIAR MENSAJES A TELEGRAM
void sendTelegramMessage(String message) {
  if (WiFi.status() == WL_CONNECTED && telegramo=="si") {
    bot.sendMessage(CHAT_ID, message, "");
  }
}

// CONEXION AL WIFI
void connectToWiFi() {
  WiFi.begin(ssid, password);
  int attempts = 0;
  while (WiFi.status() != WL_CONNECTED && attempts < 20) {
    delay(500);
    attempts++;
  }
}

// CALCULA EL TIEMPO SIN LUZ
String calcularTiempoSinLuz() {
  File file = LittleFS.open("/hora_conexion.txt", "r");
  if (!file) {
    return "Error: No se pudo leer la hora guardada";
  }
  String horaGuardada = file.readStringUntil('\n');
  file.close();

  String horaActual = obtenerHoraFormateada();
  // Convertir HH:MM:SS a segundos
  int h1 = horaGuardada.substring(0, 2).toInt();
  int m1 = horaGuardada.substring(3, 5).toInt();
  int s1 = horaGuardada.substring(6, 8).toInt();
  int segundosGuardados = h1 * 3600 + m1 * 60 + s1;
  int h2 = horaActual.substring(0, 2).toInt();
  int m2 = horaActual.substring(3, 5).toInt();
  int s2 = horaActual.substring(6, 8).toInt();
  int segundosActuales = h2 * 3600 + m2 * 60 + s2;

  int diferencia = segundosActuales - segundosGuardados;
  if (diferencia < 0) diferencia += 86400;  // Ajuste si pasa la medianoche

  // Formatear diferencia como "HH:MM:SS"
  int horas = diferencia / 3600;
  int minutos = (diferencia % 3600) / 60;
  int segundos = diferencia % 60;

  char buffer[20];
  sprintf(buffer, "%02d:%02d:%02d", horas, minutos, segundos);
  return String(buffer);
}

// FORMATEAR HORA
String obtenerHoraFormateada() {
  timeClient.update();

  int hora = timeClient.getHours();
  int minutos = timeClient.getMinutes();
  int segundos = timeClient.getSeconds();

  // Obtener el dia de la semana (0=Domingo, 1=Lunes, etc.)
  int diaSemana = timeClient.getDay();
  // Obtener fecha actual (alternativa para ESP8266)
  time_t now = time(nullptr);
  struct tm *timeinfo = localtime(&now);
  int mes = timeinfo->tm_mon + 1;  // tm_mon es 0-11
  int dia = timeinfo->tm_mday;
  // Ajuste para horario de verano (ejemplo para EspaÃ±a)
  if (mes > 3 && mes < 10) {
    // Estamos en horario de verano (abril-septiembre)
    hora += 1;
  } else if (mes == 3) {
    // Marzo: a partir del ultimo domingo (simplificado)
    if (dia >= 25) {  // Aproximacion para ultimo domingo de marzo
      hora += 1;
    }
  } else if (mes == 10) {
    // Octubre: antes del ultimo domingo (simplificado)
    if (dia < 25) {  // Aproximacion para ultimo domingo de octubre
      hora += 1;
    }
  }

  // Ajustar si pasamos de medianoche
  if (hora >= 24) {
    hora -= 24;
  }

  // AÃ±adir ceros iniciales
  String strHora = (hora < 10) ?
                 "0" + String(hora) : String(hora);
  String strMinutos = (minutos < 10) ? "0" + String(minutos) : String(minutos);
  String strSegundos = (segundos < 10) ? "0" + String(segundos) : String(segundos);
  return strHora + ":" + strMinutos + ":" + strSegundos;
}

// GUARDAR HORA EN ARCHIVO
void guardarHoraConexion() {
  File file = LittleFS.open("/hora_conexion.txt", "w");
  if (!file) {
    Serial.println("Error al abrir el archivo para escritura");
    return;
  }
  String horaActual = obtenerHoraFormateada();
  file.println(horaActual);
  file.close();
  Serial.println("Hora guardada: " + horaActual);
}

// CODIFICA MENSAJE QUE SE ENVIA POR GET AL SERVIDOR
String urlEncode(String str) {
  String encodedString = "";
  char c;
  char code0;
  char code1;
  for (unsigned int i = 0; i < str.length(); i++) {
    c = str.charAt(i);
    if (c == ' ') {
      encodedString += '+';
    } else if (isalnum(c)) {
      encodedString += c;
    } else {
      code1 = (c & 0xf) + '0';
      if ((c & 0xf) > 9) {
        code1 = (c & 0xf) - 10 + 'A';
      }
      c = (c >> 4) & 0xf;
      code0 = c + '0';
      if (c > 9) {
        code0 = c - 10 + 'A';
      }
      encodedString += '%';
      encodedString += code0;
      encodedString += code1;
    }
  }
  return encodedString;
}

// ENVIA LOS MENSAJES AL SERVIDOR
void sendToServer(String message) {
  if (WiFi.status() != WL_CONNECTED) {
    return;
  }

  WiFiClientSecure client;
  client.setInsecure(); // Solo para desarrollo - no usar en produccion


  Serial.println(serverName);
  if (!client.connect(serverName, 443)) {
    Serial.println("No hay conexion");
    telegramo="si";
    return;
  } 
  // Serial.println(telegramo);

  // CODIFICAMOS EL MENSAJE ENVIADO AL SERVIDOR
  String urlEncodedMessage = urlEncode(message);
  // HACEMOS LA PETICION AL SERVIDOR
  String request = String("GET /blackout/index.php?msg=") + urlEncodedMessage + " HTTP/1.1\r\n" +
                   "Host: " + serverName + "\r\n" +
                   "User-Agent: ESP8266\r\n" +
                   "Connection: close\r\n\r\n";
  client.print(request);

  // Esperamos la respuesta del servidor
  unsigned long timeout = millis();
  while (client.available() == 0) {
    if (millis() - timeout > 5000) {
      Serial.println("Error: Timeout esperando respuesta");
      client.stop();
      return;
    }
  }

  // Leemos la respuesta lÃ­nea por lÃ­nea
  // while (client.available()) {
  //   String line = client.readStringUntil('\r');
  //   // Puedes verificar aquÃ­ si la respuesta contiene algÃºn cÃ³digo de Ã©xito (200 OK)
  //   if (line.startsWith("HTTP/1.1 200")) {
  //     Serial.println("Mensaje recibido correctamente por el servidor");
  //   }
  // }

  client.stop();
}

// SERVIDOR WEB LOCAL (EN LA ESP8266)
void handleRoot() {
    String html = "<!DOCTYPE html><html><head><title>ConfiguraciÃ³n Blackout</title>";
    html += "<html lang='es'><meta charset='UTF-8'>";
    html += "<meta name='viewport' content='width=device-width, initial-scale=1.0'>";
    html += "<style>";
    html += "body {";
    html += "  font-family: Arial, sans-serif;";
    html += "  background-color: #575757;";
    html += "  color: #e0e0e0;";
    html += "  margin: 0;";
    html += "  padding: 20px;";
    html += "}";
    html += "form {";
    html += "  display: flex;";
    html += "  flex-direction: column;";
    html += "  max-width: 300px;";
    html += "  margin: 20px auto;";
    html += "  background-color: #3e3e3e;";
    html += "  padding: 20px;";
    html += "  border-radius: 8px;";
    html += "  box-shadow: 0 2px 10px rgba(0,0,0,0.5);";
    html += "}";
    html += "h1 {";
    html += "  color: #a0a0a0;";
    html += "}";
    html += "label {";
    html += "  margin-bottom: 5px;";
    html += "  color: #a0a0a0;";
    html += "}";
    html += "input, button {";
    html += "  margin-bottom: 10px;";
    html += "  padding: 8px;";
    html += "  background-color: #575757;";
    html += "  color: #a0a0a0;";
    html += "  border: 1px solid #444;";
    html += "  border-radius: 4px;";
    html += "}";
    html += "input:focus {";
    html += "  outline: none;";
    html += "  border-color: #3C83ACFF;";
    html += "}";
    html += "input[type='submit'], button {";
    html += "  background-color: #3C83ACFF;";
    html += "  color: white;";
    html += "  border: none;";
    html += "  cursor: pointer;";
    html += "  font-weight: bold;";
    html += "  transition: background-color 0.3s;";
    html += "}";
    html += "input[type='submit']:hover, button:hover {";
    html += "  background-color: #2a6a8a;";
    html += "}";
    html += "button {";
    html += "  margin-top: 10px;";
    html += "}";
    html += "</style>";
    html += "</head><body><div style='text-align:center;'><h12>ConfiguraciÃ³n Blackout</h2>";
    html += "<form method='POST' action='/save'>";
    html += "<label>SSID de Wifi:</label><input type='text' name='ssid' value='" + String(ssid) + "'><br>";
    html += "<label>Clave de Wifi:</label><input type='password' name='password' value='" + String(password) + "'><br>";
    html += "<label>URL del servidor:</label><input type='text' name='serverUrl' value='" + String(serverUrl ? serverUrl : "") + "'><br>";
    html += "<label>Telegram de normalidad (ms):</label><input type='number' name='hourlyInterval' value='" + String(hourlyInterval) + "'><br>";
    html += "<label>Mensaje para wifi desonectado:</label><input type='text' name='desconectadoWifi' value='" + desconectadoWifi + "'><br>";
    html += "<label>Mensaje para energÃ­a desconectada:</label><input type='text' name='desconectadoLuz' value='" + desconectadoLuz + "'><br>";
    html += "<label>Mensaje de todo estÃ¡ bien:</label><input type='text' name='conectado' value='" + conectado + "'><br>";
    html += "<label>Envio de estado cada (ms):</label><input type='number' name='control' value='" + String(control) + "'><br>";
    html += "<label>Activar Telegram (si/no):</label><input type='text' name='telegramo' value='" + telegramo + "'>";
    html += "<input type='submit' value='Guardar ConfiguraciÃ³n'>";
    html += "</form>";

    html += "<button onclick=\"fetch('/restart').then(() => alert('Reiniciando...'))\">Reiniciar</button><br>";
    html += "</div></body></html>";

    server.send(200, "text/html", html);
}

// GUARDAR CONFIGURACION
void handleSave() {
  if (server.method() == HTTP_POST) {
    Serial.println("Guardando configuraciÃ³n...");
    File configFile = LittleFS.open("/config.txt", "w");
    if (!configFile) {
      server.send(500, "text/plain", "Error al guardar la configuraciÃ³n");
      return;
    }

    // Actualizar las variables con los datos del formulario y escribir en el archivo
    strcpy(ssid, server.arg("ssid").c_str());
    configFile.println("ssid=" + server.arg("ssid"));

    strcpy(password, server.arg("password").c_str());
    configFile.println("password=" + server.arg("password"));

    if (server.hasArg("serverUrl")) {
      if (serverUrl) free(serverUrl);  // Liberar memoria anterior
      serverUrl = strdup(server.arg("serverUrl").c_str());
      configFile.println("serverUrl=" + server.arg("serverUrl"));
    }

    hourlyInterval = server.arg("hourlyInterval").toInt();
    configFile.println("hourlyInterval=" + server.arg("hourlyInterval"));

    desconectadoWifi = server.arg("desconectadoWifi");
    configFile.println("desconectadoWifi=" + server.arg("desconectadoWifi"));

    desconectadoLuz = server.arg("desconectadoLuz");
    configFile.println("desconectadoLuz=" + server.arg("desconectadoLuz"));

    conectado = server.arg("conectado");
    configFile.println("conectado=" + server.arg("conectado"));

    control = server.arg("control").toInt();
    configFile.println("control=" + server.arg("control"));

    telegramo = server.arg("telegramo");
    configFile.println("telegramo=" + server.arg("telegramo"));

    configFile.close();

  String htmla = "<!DOCTYPE html><html><head><title>ConfiguraciÃ³n Blackout</title>";
  htmla += "<html lang='es'><meta charset='UTF-8'>";
  htmla += "<meta name='viewport' content='width=device-width, initial-scale=1.0'>";
  htmla += "<style>body{font-family:Arial,sans-serif;} form{display:flex;flex-direction:column;max-width:300px;margin:20px auto;}";
  htmla += "input, button{margin-bottom:10px;padding:8px;} label{margin-bottom:5px;}</style>";
  htmla += "</head><body><div style='text-align:center;'><h1>ConfiguraciÃ³n Blackout</h1>";
    delay(4000);
  htmla += "<br><br>Configuracion guardada.<br><br><a href='#' onclick='history.back(); return false;'>Volver atrÃ¡s</a>";
  server.send(200, "text/html", htmla);

  } else {
    server.send(405, "text/plain", "Metodo no permitido");
  }
}

// CARGA LA CONFIGURACION DESDE: "/config.txt"
void loadConfig() {
  File configFile = LittleFS.open("/config.txt", "r");
  if (!configFile) {
  #include "config.h"

  }
  while (configFile.available()) {
    String line = configFile.readStringUntil('\n');
    line.trim(); // Eliminar espacios en blanco al final
    int separator = line.indexOf('=');
    if (separator != -1) {
      String key = line.substring(0, separator);
      String value = line.substring(separator + 1);

      // Asignar valores a las variables
      if (key == "ssid") {
        strcpy(ssid, value.c_str());
      } else if (key == "password") {
        strcpy(password, value.c_str());
      } else if (key == "serverUrl") {
        if (serverUrl) free(serverUrl);
        serverUrl = strdup(value.c_str());
        // String url = String(serverUrl);
        // int start = url.indexOf("://") + 3;
        // int end = url.indexOf("/", start);
        // String serverName = url.substring(start, end);
        // free(serverUrl);
        // serverUrl = strdup(serverName.c_str());

      } else if (key == "telegramo") {
        telegramo = value;
      // } else if (key == "telegramo") {
      //   if (telegramo) free(telegramo);
      //   telegramo = strdup(value.c_str());

      } else if (key == "hourlyInterval") {
        hourlyInterval = value.toInt();

      } else if (key == "desconectadoWifi") {
        desconectadoWifi = value;

      } else if (key == "desconectadoLuz") {
        desconectadoLuz = value;
      } else if (key == "conectado") {
        conectado = value;
      } else if (key == "control") {
        control = value.toInt();
      }
    }
  }

  configFile.close();

  Serial.println("ConfiguraciÃ³n cargada.");
}

// CONTADOR DE ENVIO DE DATOS
void handleGetLastSendTime() {
  String response;
  if (shouldSendHello) {
    response = "Nunca";
  } else {
    int secundos = (millis() - lastConnectionTime) / 1000;
    response = String(secundos) + " seg";
  }
  server.send(200, "text/plain", response);
}

void handleStatus() {
  String statusMessage = WiFi.status() == WL_CONNECTED ? "Conectado" : "Desconectado";
  String json = "{";
  json += "\"connected\": " + String(WiFi.status() == WL_CONNECTED ? "true" : "false") + ",";
  json += "\"offlineMinutes\": " + String(offlineMinutes) + ",";
  json += "\"message\": \"Estado actual: " + statusMessage + "\"";
  json += "}";

  server.send(200, "application/json", json);
}

// REESTABLECE EL SERVIDOR LOCAL
void handleRestart() {
  server.send(200, "text/plain", "Reiniciando...");
  delay(1000);
  ESP.restart();
}

// MUESTRA FAVICON EN EL NAVEGADOR
void handleFavicon() {
  // Este es un favicon bï¿½sico en formato PNG (16x16)
  static const uint8_t favicon[] PROGMEM = {
    0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, 
    0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x08, 0x06, 0x00, 0x00, 0x00, 0xF4, 0x78, 0xD4, 
    0xFA, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x9D, 0x7A, 0x00, 0x00, 0x9D, 
    0x7A, 0x01, 0xEE, 0xD8, 0x95, 0x20, 0x00, 0x00, 0x00, 0x19, 0x74, 0x45, 0x58, 0x74, 0x53, 0x6F, 
    0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x00, 0x77, 0x77, 0x77, 0x2E, 0x69, 0x6E, 0x6B, 0x73, 0x63, 
    0x61, 0x70, 0x65, 0x2E, 0x6F, 0x72, 0x67, 0x9B, 0xEE, 0x3C, 0x1A, 0x00, 0x00, 0x1F, 0xC0, 0x49, 
    0x44, 0x41, 0x54, 0x78, 0x9C, 0xED, 0xDD, 0x7B, 0xB0, 0xA4, 0x75, 0x7D, 0xE7, 0xF1, 0xEF, 0xD3, 
    0xDD, 0x67, 0xCE, 0x6D, 0xEE, 0x5C, 0x86, 0x11, 0x56, 0x01, 0x41, 0x08, 0x72, 0x93, 0x35, 0xA2, 
    0x98, 0x08, 0xE6, 0x62, 0x25, 0x26, 0xD9, 0x8A, 0x15, 0x51, 0xB3, 0xEB, 0x5A, 0xD9, 0x94, 0x61, 
    0x6B, 0x0B, 0x06, 0xC1, 0xD2, 0xDA, 0x24, 0x06, 0xA6, 0x01, 0x77, 0xCD, 0x1A, 0x94, 0xCB, 0x0C, 
    0xBA, 0x64, 0x13, 0x93, 0x32, 0xB5, 0xEE, 0x46, 0x8C, 0xA6, 0x4C, 0xB2, 0x26, 0xC6, 0x44, 0xB0, 
    0x92, 0x88, 0x60, 0x54, 0xAE, 0x6A, 0xB8, 0x0C, 0x22, 0x97, 0x19, 0x98, 0x33, 0xF7, 0x73, 0x9B, 
    0xD3, 0xFD, 0xFC, 0xF6, 0x0F, 0x45, 0x0D, 0x0E, 0x08, 0xE7, 0xF6, 0xEB, 0xEE, 0xDF, 0xEB, 0x55, 
    0xE5, 0x3F, 0x07, 0xAA, 0x9E, 0x8F, 0x33, 0x9C, 0xEE, 0x77, 0x3F, 0xFD, 0xF4, 0xD3, 0x11, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x5F, 0xAA, 0x72, 0x0F, 0xA0, 0x1C, 0xE3, 
    0x57, 0x5E, 0x74, 0x5A, 0xAA, 0xAB, 0xCB, 0xB3, 0x0D, 0xA8, 0xD2, 0x9D, 0x53, 0x9B, 0xB7, 0x5E, 
    0x95, 0xED, 0xF8, 0x4B, 0x60, 0xAC, 0xBD, 0xE9, 0xA6, 0x9C, 0xC7, 0x9F, 0x6A, 0x6F, 0x39, 0x3F, 
    0xE7, 0xF1, 0x17, 0xDB, 0xD8, 0x15, 0x17, 0x5D, 0x16, 0xA9, 0x3A, 0x3D, 0xD7, 0xF1, 0xAB, 0x46, 
    0xBA, 0x72, 0xF2, 0xF2, 0xAD, 0x77, 0xE5, 0x3A, 0x3E, 0x65, 0x69, 0xE5, 0x1E, 0x40, 0x41, 0xEA, 
    0x6A, 0x43, 0x44, 0xBC, 0x31, 0xD7, 0xE1, 0x53, 0xAA, 0xD6, 0x45, 0xC4, 0x40, 0x05, 0x40, 0x64, 
    0xFC, 0xF3, 0x1C, 0x44, 0x29, 0x55, 0xE7, 0x56, 0x11, 0x3F, 0x9D, 0x6D, 0x40, 0x5D, 0xDD, 0x18, 
    0x11, 0x02, 0x80, 0x65, 0xD1, 0xC8, 0x3D, 0x00, 0x00, 0x58, 0x7E, 0x02, 0x00, 0x00, 0x0A, 0x24, 
    0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 
    0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 
    0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 
    0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 
    0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 
    0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 
    0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 
    0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 
    0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 
    0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 
    0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 
    0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 
    0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 
    0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 
    0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 
    0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 
    0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 
    0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 
    0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 
    0x0A, 0x54, 0xE5, 0x1E, 0x40, 0x9F, 0x6B, 0xFF, 0xDA, 0xC8, 0x9A, 0xE1, 0xD1, 0xD1, 0x34, 0x3B, 
    0x52, 0x1D, 0x8C, 0x58, 0xFB, 0x6C, 0xFF, 0x6A, 0xB3, 0xEE, 0xBE, 0x3A, 0x35, 0xD2, 0x47, 0x97, 
    0x6B, 0xDA, 0xD3, 0xA5, 0x14, 0xFF, 0x94, 0xAA, 0xD6, 0x7F, 0xCC, 0x75, 0xFC, 0xA5, 0xD0, 0x88, 
    0xCE, 0x03, 0x39, 0x8F, 0x5F, 0x47, 0xEB, 0xC5, 0x39, 0x8F, 0xBF, 0xD8, 0xAA, 0xD4, 0xF9, 0x93, 
    0xAA, 0x8A, 0x73, 0xB2, 0x1D, 0xBF, 0xAE, 0xDE, 0xD6, 0x6D, 0x34, 0xFF, 0xF1, 0x99, 0xFE, 0xF9, 
    0xF0, 0xF0, 0xCC, 0xEE, 0x88, 0x88, 0xBD, 0xB3, 0x1B, 0x26, 0xA3, 0xDD, 0x3E, 0xB8, 0x7C, 0xCB, 
    0x18, 0x44, 0x02, 0x80, 0x67, 0x35, 0xFA, 0xDE, 0x4B, 0x8F, 0x6E, 0x74, 0xBA, 0xA7, 0xD5, 0x55, 
    0x9C, 0xD8, 0x48, 0x71, 0x5C, 0x8A, 0xFA, 0xD8, 0x88, 0xEA, 0xE8, 0x88, 0x38, 0x32, 0x22, 0x0E, 
    0x8F, 0x88, 0x95, 0x79, 0x17, 0x42, 0x99, 0x52, 0xC4, 0xFE, 0x2A, 0xD2, 0x93, 0x11, 0xF1, 0x64, 
    0x44, 0xE3, 0x91, 0x14, 0xF5, 0xB6, 0x2A, 0x62, 0x5B, 0x55, 0xA5, 0xFB, 0xA2, 0xD5, 0xBA, 0x73, 
    0xF2, 0x3D, 0xD7, 0xED, 0xC8, 0xBD, 0x91, 0xDE, 0x26, 0x00, 0xF8, 0x9E, 0x75, 0xBF, 0x7B, 0xC1, 
    0x9A, 0xD9, 0xD9, 0x15, 0xE7, 0x44, 0x8A, 0x57, 0xA7, 0xA8, 0x5E, 0x59, 0x45, 0x9C, 0x11, 0xDF, 
    0x79, 0x92, 0x07, 0xFA, 0xCF, 0xF6, 0x88, 0xB8, 0x23, 0xAA, 0xF4, 0xC5, 0x2A, 0x55, 0xFF, 0x38, 
    0x19, 0xDD, 0x5B, 0xA3, 0xFD, 0xA1, 0x03, 0xB9, 0x47, 0xD1, 0x3B, 0x04, 0x40, 0xC9, 0x3E, 0x7E, 
    0x7E, 0x73, 0xF4, 0x1B, 0x47, 0xBE, 0xA2, 0xAA, 0x1B, 0xAF, 0x8F, 0x88, 0x9F, 0x8F, 0x88, 0x97, 
    0x85, 0xEB, 0x42, 0x60, 0x50, 0x75, 0x22, 0xE2, 0xF6, 0x88, 0xF8, 0x7F, 0xD1, 0xA8, 0x3E, 0x33, 
    0x75, 0xF9, 0xF5, 0x5F, 0x89, 0x88, 0x94, 0x79, 0x13, 0x19, 0x09, 0x80, 0xD2, 0xB4, 0xDB, 0x8D, 
    0x91, 0xC6, 0xC4, 0x4F, 0x36, 0xEA, 0x78, 0x73, 0x44, 0xBC, 0x31, 0x22, 0x8E, 0xC8, 0x3D, 0x09, 
    0xC8, 0x21, 0x3D, 0x5A, 0x45, 0x75, 0x53, 0x1D, 0xF1, 0xA7, 0xD3, 0xED, 0x2D, 0x5F, 0x0A, 0x31, 
    0x50, 0x1C, 0x01, 0x50, 0x88, 0x91, 0xF7, 0x5E, 0xF8, 0xA2, 0x46, 0xA7, 0xFA, 0x8D, 0x88, 0xF8, 
    0xB5, 0xEF, 0xBE, 0x87, 0x0F, 0xF0, 0x94, 0x6D, 0x51, 0x55, 0x7F, 0x18, 0xAD, 0xC6, 0x47, 0xA6, 
    0xDE, 0x73, 0xED, 0xE3, 0xB9, 0xC7, 0xB0, 0x3C, 0x04, 0xC0, 0x60, 0xAB, 0xC6, 0xAF, 0xB8, 0xE8, 
    0x75, 0x29, 0xC5, 0xC5, 0x11, 0xD5, 0xCF, 0x85, 0xD3, 0xFB, 0xC0, 0xB3, 0xEB, 0x44, 0xC4, 0xA7, 
    0xEB, 0xA8, 0xAF, 0x9B, 0x69, 0xDF, 0xF0, 0x85, 0xDC, 0x63, 0x58, 0x5A, 0x02, 0x60, 0x10, 0xDD, 
    0x78, 0xC1, 0xD0, 0xF8, 0xF6, 0x91, 0xB7, 0xA4, 0x94, 0xDE, 0x15, 0x11, 0xA7, 0xE7, 0x9E, 0x03, 
    0xF4, 0xA3, 0xF4, 0xA5, 0x14, 0xD5, 0xD5, 0xD3, 0x71, 0xD8, 0x27, 0xA3, 0xDD, 0xAE, 0x73, 0xAF, 
    0x61, 0xF1, 0x09, 0x80, 0x41, 0xD2, 0x6E, 0x37, 0x46, 0xAB, 0x9D, 0xBF, 0xD2, 0x48, 0xD5, 0x7F, 
    0x4B, 0x11, 0x27, 0xE6, 0x9E, 0x03, 0x0C, 0x82, 0xF4, 0xF5, 0x54, 0xC5, 0xE6, 0xE9, 0xCD, 0x5B, 
    0x3F, 0x11, 0xAE, 0x13, 0x18, 0x28, 0x02, 0x60, 0x40, 0x8C, 0x5D, 0xB1, 0xE9, 0x97, 0x22, 0xC5, 
    0xEF, 0x46, 0xC4, 0x29, 0xB9, 0xB7, 0x00, 0x03, 0xE9, 0x9F, 0x1B, 0x55, 0xF5, 0xEE, 0x03, 0x9B, 
    0xAF, 0xFF, 0x7C, 0xEE, 0x21, 0x2C, 0x0E, 0x01, 0xD0, 0xE7, 0x86, 0xDB, 0x17, 0xBE, 0xA4, 0x19, 
    0x8D, 0x0F, 0x46, 0xC4, 0x2F, 0xE4, 0xDE, 0x02, 0x94, 0xA0, 0xFA, 0xCB, 0x3A, 0x9A, 0xEF, 0x98, 
    0x69, 0x5F, 0xF3, 0x60, 0xEE, 0x25, 0x2C, 0x8C, 0x00, 0xE8, 0x57, 0x1F, 0xBC, 0x74, 0x74, 0x74, 
    0x5F, 0x67, 0x73, 0x15, 0xF1, 0xCE, 0x88, 0x18, 0xCA, 0x3D, 0x07, 0x28, 0xCA, 0x4C, 0x54, 0xD5, 
    0x7B, 0xA7, 0x8E, 0x9A, 0x79, 0x7F, 0xFC, 0xE7, 0xDF, 0x9F, 0xCB, 0x3D, 0x86, 0xF9, 0x11, 0x00, 
    0x7D, 0x68, 0xF4, 0xCA, 0x8B, 0x5E, 0x1D, 0x75, 0xF5, 0x07, 0x55, 0xC4, 0xC9, 0xB9, 0xB7, 0x00, 
    0x45, 0xBB, 0x2B, 0x45, 0xBC, 0x7D, 0xBA, 0xBD, 0xE5, 0xB6, 0xDC, 0x43, 0x78, 0xFE, 0x04, 0x40, 
    0x3F, 0xB9, 0xF1, 0x82, 0xA1, 0xB1, 0xC7, 0x47, 0xDE, 0x13, 0x91, 0x2E, 0x0B, 0x1F, 0xE9, 0x03, 
    0x7A, 0x43, 0x37, 0x45, 0x5C, 0x3D, 0xBD, 0x71, 0xF6, 0x32, 0x67, 0x03, 0xFA, 0x8B, 0x00, 0xE8, 
    0x13, 0xAB, 0xDA, 0x17, 0x9D, 0xDC, 0x8D, 0xEA, 0x63, 0xF1, 0x9D, 0xDB, 0xF5, 0x02, 0xF4, 0x98, 
    0xF4, 0xA5, 0x6E, 0xD4, 0x6F, 0x9D, 0x6D, 0x7F, 0xE8, 0xFE, 0xDC, 0x4B, 0x78, 0x6E, 0xBC, 0x8A, 
    0xEC, 0x03, 0xA3, 0xED, 0x8B, 0xDF, 0xD2, 0x8D, 0xEA, 0xCB, 0xE1, 0xC9, 0x1F, 0xE8, 0x59, 0xD5, 
    0xD9, 0xCD, 0x68, 0xFE, 0xF3, 0x58, 0xFB, 0xA2, 0x5F, 0xCE, 0xBD, 0x84, 0xE7, 0xC6, 0x19, 0x80, 
    0x5E, 0xD6, 0x6E, 0xB7, 0x46, 0x63, 0xE2, 0xBD, 0x55, 0xC4, 0x7F, 0xCD, 0x3D, 0x05, 0xE0, 0x39, 
    0x4A, 0x29, 0xE2, 0xFD, 0xD3, 0x71, 0xD8, 0x6F, 0xBB, 0x81, 0x50, 0x6F, 0x13, 0x00, 0x3D, 0x6A, 
    0xDD, 0xEF, 0x5E, 0xB0, 0x66, 0x76, 0x66, 0xF8, 0x13, 0x11, 0xF1, 0x33, 0xB9, 0xB7, 0x00, 0xCC, 
    0xC3, 0x27, 0xA7, 0x56, 0xB7, 0xDE, 0x1A, 0xEF, 0xBC, 0x66, 0x3A, 0xF7, 0x10, 0x0E, 0x4D, 0x00, 
    0xF4, 0xA0, 0xD1, 0xF7, 0x5E, 0x7A, 0x74, 0xD5, 0x99, 0xFB, 0xCB, 0x88, 0xEA, 0xCC, 0xDC, 0x5B, 
    0x00, 0x16, 0xE0, 0xB6, 0x6A, 0xA8, 0xF1, 0xEF, 0x26, 0xDF, 0x73, 0xDD, 0x8E, 0xDC, 0x43, 0xF8, 
    0x61, 0x02, 0xA0, 0xC7, 0xAC, 0x6C, 0x5F, 0x7C, 0x6A, 0x1D, 0xE9, 0xB3, 0x11, 0xB1, 0x31, 0xF7, 
    0x16, 0x80, 0x45, 0xF0, 0x40, 0xDD, 0x4C, 0x3F, 0x3B, 0x73, 0xD9, 0xD6, 0x6D, 0xB9, 0x87, 0xF0, 
    0xAF, 0x09, 0x80, 0x1E, 0x32, 0xD6, 0xBE, 0xF0, 0xAC, 0x88, 0xC6, 0xDF, 0x44, 0xC4, 0xE1, 0xB9, 
    0xB7, 0x00, 0x2C, 0xA2, 0xC7, 0x1B, 0x51, 0xBD, 0xEE, 0x40, 0xFB, 0xFA, 0xBB, 0x73, 0x0F, 0xE1, 
    0xFB, 0x7C, 0x0A, 0xA0, 0x47, 0x8C, 0xB6, 0x37, 0xBD, 0x32, 0xA2, 0xF1, 0x77, 0xE1, 0xC9, 0x1F, 
    0x18, 0x3C, 0x1B, 0xEB, 0x48, 0x9F, 0x1B, 0xBF, 0xF2, 0xA2, 0xD3, 0x72, 0x0F, 0xE1, 0xFB, 0x9C, 
    0x01, 0xE8, 0x01, 0xE3, 0x57, 0x6E, 0x3A, 0x23, 0xD5, 0xF1, 0xF9, 0x88, 0x58, 0x97, 0x7B, 0x0B, 
    0xC0, 0x12, 0x7A, 0xB2, 0xD1, 0x6C, 0x9E, 0x7B, 0xE0, 0xB2, 0x6B, 0xBF, 0x9E, 0x7B, 0x08, 0x02, 
    0x20, 0xBB, 0x55, 0x57, 0xBD, 0xE3, 0xA4, 0x6E, 0xB7, 0xBE, 0x25, 0x22, 0x36, 0xE4, 0xDE, 0x02, 
    0xB0, 0xF4, 0xD2, 0xA3, 0x75, 0x33, 0x7E, 0xD2, 0x35, 0x01, 0xF9, 0x09, 0x80, 0x8C, 0x46, 0xDB, 
    0xEF, 0x78, 0x61, 0x15, 0xF5, 0xAD, 0xE1, 0x82, 0x3F, 0xA0, 0x2C, 0xF7, 0x37, 0x63, 0xC5, 0xAB, 
    0xF6, 0xB7, 0x3F, 0xB0, 0x33, 0xF7, 0x90, 0x92, 0xB9, 0x06, 0x20, 0x93, 0xF5, 0xED, 0x4D, 0xAB, 
    0xAB, 0xA8, 0xFF, 0x22, 0x3C, 0xF9, 0x03, 0xE5, 0x39, 0xA1, 0x1B, 0x07, 0xFF, 0x2A, 0xDA, 0x17, 
    0x8C, 0xE5, 0x1E, 0x52, 0x32, 0x01, 0x90, 0x43, 0xBB, 0xDD, 0x9A, 0x89, 0xF8, 0xB3, 0x88, 0x38, 
    0x3D, 0xF7, 0x14, 0x80, 0x4C, 0x5E, 0x31, 0x1E, 0xC3, 0x7F, 0x14, 0xCE, 0x44, 0x67, 0x23, 0x00, 
    0x32, 0x18, 0x8F, 0x89, 0xDF, 0x0B, 0x77, 0xF8, 0x03, 0x0A, 0x97, 0x22, 0xDE, 0x34, 0x7E, 0xC5, 
    0xC5, 0xBF, 0x99, 0x7B, 0x47, 0xA9, 0x94, 0xD7, 0x32, 0x1B, 0xBD, 0x62, 0xD3, 0xAF, 0x56, 0x29, 
    0x3E, 0x96, 0x7B, 0x07, 0x40, 0x8F, 0xA8, 0xA3, 0x4A, 0xBF, 0x38, 0xB5, 0x79, 0xEB, 0x67, 0x72, 
    0x0F, 0x29, 0x8D, 0x00, 0x58, 0x46, 0x2B, 0xAF, 0xBA, 0xE4, 0xC7, 0xEA, 0x6E, 0xF7, 0xF6, 0x88, 
    0x18, 0xCF, 0xBD, 0x05, 0xA0, 0x87, 0x4C, 0xA4, 0x88, 0x33, 0xA7, 0xDB, 0x5B, 0x1E, 0xC9, 0x3D, 
    0xA4, 0x24, 0xDE, 0x02, 0x58, 0x2E, 0xD7, 0x6F, 0x1A, 0xAE, 0xBB, 0x9D, 0x8F, 0x85, 0x27, 0x7F, 
    0x80, 0xA7, 0x3B, 0xAC, 0x11, 0xE9, 0x7F, 0xC7, 0xC7, 0xCF, 0x6F, 0xE6, 0x1E, 0x52, 0x12, 0x01, 
    0xB0, 0x4C, 0xC6, 0x77, 0xC5, 0x7F, 0xF7, 0xE5, 0x3E, 0x00, 0x87, 0x96, 0xA2, 0x7A, 0xCD, 0xF8, 
    0xBD, 0x1B, 0xDE, 0x9D, 0x7B, 0x47, 0x49, 0xBC, 0x05, 0xB0, 0x0C, 0x46, 0xDA, 0x17, 0xBE, 0xA6, 
    0x11, 0x8D, 0xCF, 0x47, 0x01, 0xC1, 0x35, 0xBC, 0xA2, 0x15, 0xCD, 0xC6, 0xC0, 0xFF, 0xDF, 0x84, 
    0x65, 0xD7, 0xE9, 0xD6, 0xD1, 0xED, 0xD6, 0xD1, 0xAD, 0xEB, 0xDC, 0x53, 0x96, 0xD2, 0x5C, 0x15, 
    0x8D, 0x97, 0x4F, 0xB6, 0xAF, 0xBB, 0x33, 0xF7, 0x90, 0x12, 0x08, 0x80, 0xA5, 0xF6, 0xC1, 0x4B, 
    0x47, 0xC7, 0xF7, 0x75, 0xBE, 0x96, 0x22, 0x5E, 0x92, 0x7B, 0xCA, 0x52, 0x6B, 0x54, 0x55, 0x9C, 
    0x75, 0xFA, 0x09, 0xB1, 0x7E, 0xCD, 0xCA, 0xDC, 0x53, 0x60, 0xA0, 0xCD, 0x75, 0x3A, 0x31, 0x3D, 
    0x73, 0x30, 0x26, 0xA7, 0x66, 0x63, 0x6A, 0x7A, 0x26, 0x26, 0x27, 0x67, 0x63, 0xD7, 0xDE, 0xFD, 
    0x71, 0x70, 0xAE, 0x93, 0x7B, 0xDA, 0x62, 0xB8, 0x7D, 0xEA, 0x94, 0xED, 0xAF, 0x8A, 0x37, 0xDD, 
    0xD4, 0xCD, 0x3D, 0x64, 0xD0, 0xB5, 0x72, 0x0F, 0x18, 0x74, 0xA3, 0xFB, 0x3A, 0x9B, 0x07, 0xE5, 
    0xC9, 0xBF, 0xD9, 0x6C, 0xC6, 0xBA, 0x35, 0xE3, 0xB1, 0x72, 0x6C, 0x24, 0xC6, 0x46, 0x87, 0x63, 
    0x7C, 0x6C, 0x24, 0x46, 0x86, 0x57, 0xC4, 0x50, 0xAB, 0x11, 0xCD, 0x66, 0x2B, 0x2A, 0x39, 0x09, 
    0xCB, 0x62, 0xA8, 0xD5, 0x8A, 0xA1, 0x95, 0xAD, 0x58, 0xBD, 0xF2, 0x5F, 0xDF, 0x47, 0x67, 0x72, 
    0x6A, 0x26, 0x26, 0xF6, 0x1C, 0x88, 0x9D, 0x13, 0x7B, 0x63, 0x62, 0xCF, 0xBE, 0x48, 0x29, 0xD3, 
    0xC0, 0x85, 0xF9, 0xF1, 0xF1, 0xAF, 0x1F, 0x75, 0xC9, 0x64, 0xC4, 0x07, 0x72, 0x0F, 0x19, 0x74, 
    0x1E, 0xB2, 0x97, 0xD0, 0x77, 0xAF, 0xFA, 0xBF, 0x23, 0x22, 0x86, 0x72, 0x6F, 0x99, 0x8F, 0x2A, 
    0x22, 0xD6, 0xAD, 0x59, 0x19, 0x87, 0xAF, 0x5F, 0x1D, 0xEB, 0xD6, 0xAE, 0x8A, 0xD5, 0xAB, 0x46, 
    0xA3, 0xF2, 0x9F, 0x0C, 0xF4, 0x85, 0xD9, 0x83, 0x73, 0xB1, 0xFD, 0xC9, 0x3D, 0xF1, 0xD8, 0x8E, 
    0x89, 0xD8, 0x7F, 0x60, 0x3A, 0xF7, 0x9C, 0xE7, 0x6B, 0x32, 0xB5, 0x5A, 0x27, 0x4D, 0xFF, 0xCE, 
    0x35, 0x8F, 0xE6, 0x1E, 0x32, 0xC8, 0x9C, 0x01, 0x58, 0x42, 0x75, 0xB7, 0x7B, 0x4D, 0xF4, 0xE1, 
    0x93, 0xFF, 0xF8, 0xD8, 0x48, 0xBC, 0xE0, 0xC8, 0x75, 0x71, 0xD4, 0x86, 0xF5, 0x31, 0x3A, 0xBC, 
    0x22, 0xF7, 0x1C, 0x60, 0x1E, 0x86, 0x57, 0x0C, 0xC5, 0x8B, 0x8E, 0x3E, 0x22, 0x5E, 0x74, 0xF4, 
    0x11, 0xB1, 0x6B, 0xF7, 0xFE, 0x78, 0xE0, 0xE1, 0xED, 0xB1, 0x7B, 0xEF, 0x81, 0xDC, 0xB3, 0x9E, 
    0xAB, 0xF1, 0xE8, 0x74, 0xFE, 0x47, 0x44, 0xBC, 0x35, 0xF7, 0x90, 0x41, 0xE6, 0xE5, 0xDC, 0x12, 
    0x19, 0xBB, 0x62, 0xD3, 0x2F, 0x45, 0x8A, 0x4F, 0xE7, 0xDE, 0xF1, 0x7C, 0xAC, 0x5B, 0xBD, 0x32, 
    0x8E, 0x7D, 0xE1, 0x86, 0x38, 0x62, 0xDD, 0xAA, 0x70, 0x3E, 0x1F, 0x06, 0xCF, 0x9E, 0xFD, 0x93, 
    0x71, 0xDF, 0x83, 0x8F, 0xC6, 0xEE, 0xBD, 0x93, 0xB9, 0xA7, 0x3C, 0x17, 0x29, 0x45, 0xF5, 0x13, 
    0xD3, 0xED, 0xEB, 0xFF, 0x29, 0xF7, 0x90, 0x41, 0xE5, 0x33, 0x97, 0x4B, 0xE1, 0xE3, 0xE7, 0x37, 
    0x87, 0x9E, 0x5C, 0xF9, 0x67, 0x11, 0x71, 0x44, 0xEE, 0x29, 0xCF, 0xC5, 0xDA, 0xD5, 0xE3, 0x71, 
    0xEA, 0xC9, 0xC7, 0xC6, 0x09, 0xC7, 0x6E, 0x8C, 0xF1, 0xD1, 0x61, 0x4F, 0xFE, 0x30, 0xA0, 0x46, 
    0x86, 0x57, 0xC4, 0xD1, 0x1B, 0xD6, 0xC7, 0xD8, 0xE8, 0x70, 0xEC, 0xD9, 0x37, 0xD9, 0xEB, 0x9F, 
    0x28, 0xA8, 0xAA, 0x88, 0x93, 0xE6, 0x6E, 0xBE, 0xED, 0x8F, 0x72, 0x0F, 0x19, 0x54, 0x02, 0x60, 
    0x09, 0x8C, 0x9F, 0xFA, 0x33, 0x6F, 0x8D, 0x88, 0x0B, 0x72, 0xEF, 0xF8, 0x51, 0x56, 0x0C, 0xB5, 
    0xE2, 0xE4, 0x13, 0x8E, 0x89, 0x1F, 0x7B, 0xF1, 0x31, 0x31, 0x3A, 0x32, 0x9C, 0x7B, 0x0E, 0xB0, 
    0x1C, 0xAA, 0x2A, 0x56, 0xAD, 0x1C, 0x8D, 0x63, 0x36, 0x1E, 0x1E, 0xB3, 0x73, 0x73, 0xBD, 0x7E, 
    0x7D, 0xC0, 0x0B, 0x87, 0x5E, 0xFB, 0x8A, 0xDB, 0xE6, 0x6E, 0xBE, 0xED, 0xFE, 0xDC, 0x43, 0x06, 
    0x91, 0x00, 0x58, 0x6C, 0x37, 0x5E, 0x30, 0x34, 0xB4, 0xBF, 0x79, 0x53, 0x44, 0xAC, 0xCF, 0x3D, 
    0xE5, 0xD9, 0x6C, 0xDC, 0xB0, 0x3E, 0xCE, 0x3A, 0xF5, 0xC5, 0xB1, 0x76, 0xF5, 0xB8, 0x57, 0xFC, 
    0x50, 0xA0, 0x46, 0xA3, 0x11, 0x47, 0x1E, 0xB6, 0x36, 0xC6, 0x46, 0x86, 0x63, 0xD7, 0x9E, 0xFD, 
    0x51, 0xF7, 0xEC, 0x47, 0x06, 0xAA, 0x93, 0xE7, 0x6E, 0xBE, 0xED, 0x7F, 0xE5, 0x5E, 0x31, 0x88, 
    0xDC, 0xB1, 0x65, 0x91, 0x8D, 0x6F, 0x1F, 0x79, 0x4B, 0x44, 0xBC, 0x38, 0xF7, 0x8E, 0x67, 0xD2, 
    0x6C, 0x34, 0xE2, 0xD4, 0x93, 0x5E, 0x14, 0xA7, 0x9D, 0xF4, 0xA2, 0x18, 0x6A, 0xE9, 0x3F, 0x28, 
    0xDD, 0xC6, 0x0D, 0xEB, 0xE3, 0xEC, 0x97, 0x9D, 0x14, 0xE3, 0x63, 0x23, 0xB9, 0xA7, 0x3C, 0x93, 
    0x7F, 0x3B, 0xD6, 0xBE, 0xF8, 0xE7, 0x73, 0x8F, 0x18, 0x44, 0x02, 0x60, 0x71, 0x55, 0x29, 0xA5, 
    0x77, 0xE5, 0x1E, 0xF1, 0x4C, 0xC6, 0xC7, 0x86, 0xE3, 0x95, 0x67, 0x9D, 0x14, 0x2F, 0xD8, 0xD0, 
    0xD3, 0x27, 0x27, 0x80, 0x65, 0x36, 0x3E, 0x36, 0x12, 0xAF, 0x38, 0xF3, 0xC4, 0xEF, 0x9C, 0x11, 
    0xEC, 0x41, 0x29, 0x92, 0x5B, 0x04, 0x2F, 0x01, 0xE7, 0x7E, 0x17, 0xD1, 0x78, 0xFB, 0xE2, 0x9F, 
    0x4B, 0x91, 0x7A, 0xF2, 0x2B, 0x2D, 0xD7, 0xAC, 0x1A, 0x8B, 0xB3, 0x4E, 0x3D, 0x21, 0x86, 0x86, 
    0xBC, 0xEA, 0x07, 0x0E, 0xAD, 0x5B, 0xD7, 0x71, 0xC7, 0xBD, 0xDB, 0x62, 0xE7, 0xAE, 0x7D, 0xB9, 
    0xA7, 0xFC, 0x90, 0x14, 0xF1, 0xAA, 0xE9, 0xF6, 0x96, 0x5B, 0x73, 0xEF, 0x18, 0x24, 0xCE, 0x00, 
    0x2C, 0xA2, 0x14, 0xF5, 0xA6, 0xDC, 0x1B, 0x0E, 0xE5, 0xF0, 0xF5, 0xAB, 0xE3, 0xE5, 0x67, 0x9C, 
    0xE8, 0xC9, 0x1F, 0x78, 0x56, 0xCD, 0x46, 0x23, 0xCE, 0x7C, 0xE9, 0xF1, 0x71, 0xF8, 0xFA, 0xD5, 
    0xB9, 0xA7, 0x1C, 0x42, 0x75, 0x61, 0xEE, 0x05, 0x83, 0xC6, 0x19, 0x80, 0x45, 0x32, 0xD2, 0xBE, 
    0xE4, 0xD8, 0x46, 0x74, 0x1F, 0x88, 0x1E, 0x8B, 0xAA, 0x23, 0xD6, 0xAF, 0x8E, 0x33, 0x5E, 0x7A, 
    0x7C, 0x34, 0x5C, 0xE8, 0x07, 0x3C, 0x47, 0xDD, 0xBA, 0x8E, 0x2F, 0xDF, 0x71, 0x5F, 0xEC, 0xDD, 
    0x3F, 0x95, 0x7B, 0xCA, 0x0F, 0x9A, 0x69, 0x45, 0xEB, 0xE8, 0x7D, 0xED, 0x6B, 0x76, 0xE5, 0x1E, 
    0x32, 0x28, 0x7A, 0xEA, 0xC9, 0xAA, 0x9F, 0x35, 0xA2, 0xF3, 0xF6, 0xE8, 0xB1, 0x3F, 0xCF, 0xB5, 
    0xAB, 0xC7, 0xE3, 0xF4, 0x53, 0x8E, 0xF3, 0xE4, 0x0F, 0x3C, 0x2F, 0xCD, 0x46, 0x23, 0xCE, 0x3A, 
    0xF5, 0x84, 0x18, 0x1B, 0xED, 0xA9, 0x8F, 0x07, 0x8F, 0xCC, 0x45, 0xE7, 0x6D, 0xB9, 0x47, 0x0C, 
    0x92, 0x9E, 0x7A, 0xC2, 0xEA, 0x5B, 0xED, 0x76, 0x23, 0x22, 0x7E, 0x2D, 0xF7, 0x8C, 0x1F, 0x34, 
    0x3E, 0x36, 0x1A, 0x2F, 0x3B, 0xF5, 0xC5, 0xBE, 0x9A, 0x17, 0x98, 0x97, 0xA1, 0xA1, 0x66, 0x9C, 
    0x79, 0xCA, 0xF1, 0x3D, 0xF5, 0x18, 0x52, 0x45, 0xFC, 0xA7, 0xDC, 0x1B, 0x06, 0x49, 0xEF, 0xFC, 
    0xCD, 0xF6, 0xB1, 0x95, 0xB1, 0xF3, 0x35, 0x11, 0xD5, 0xD1, 0xB9, 0x77, 0x3C, 0xA5, 0xD5, 0x6C, 
    0xC4, 0x99, 0xA7, 0x1C, 0xEB, 0x63, 0x7E, 0xC0, 0x82, 0xAC, 0x1C, 0x1F, 0x89, 0x93, 0x4F, 0x38, 
    0x26, 0xF7, 0x8C, 0x1F, 0x74, 0xFA, 0xCA, 0x2B, 0x2F, 0x7C, 0x69, 0xEE, 0x11, 0x83, 0x42, 0x00, 
    0x2C, 0x82, 0x3A, 0x1A, 0x6F, 0xCE, 0xBD, 0xE1, 0x07, 0x9D, 0x72, 0xE2, 0xBF, 0xE9, 0xE5, 0xCF, 
    0xF4, 0x02, 0x7D, 0xE4, 0xE8, 0xA3, 0x0E, 0x8B, 0x8D, 0x47, 0xAE, 0xCB, 0x3D, 0xE3, 0x7B, 0xEA, 
    0xBA, 0xD9, 0x53, 0x8F, 0xB7, 0xFD, 0x4C, 0x00, 0x2C, 0xD4, 0xC7, 0xCF, 0x6F, 0x46, 0xA4, 0x5F, 
    0xC9, 0x3D, 0xE3, 0x29, 0x47, 0x1F, 0x75, 0x58, 0x1C, 0x75, 0xA4, 0xCF, 0xF9, 0x03, 0x8B, 0xE7, 
    0xE4, 0x13, 0x8E, 0x89, 0xA1, 0x56, 0x6F, 0x7C, 0x79, 0x6C, 0x15, 0x49, 0x00, 0x2C, 0x12, 0x01, 
    0xB0, 0x40, 0xA3, 0xF7, 0x6E, 0x3C, 0x3B, 0x7A, 0xE4, 0x4B, 0x7F, 0x56, 0x0C, 0xB5, 0xE2, 0xA4, 
    0xE3, 0x7B, 0xE6, 0x9D, 0x08, 0x60, 0x40, 0x0C, 0xB5, 0x5A, 0x71, 0xE2, 0x71, 0x2F, 0xC8, 0x3D, 
    0x23, 0x22, 0x22, 0x52, 0xC4, 0x4B, 0x86, 0xAF, 0xBA, 0xF8, 0xC4, 0xDC, 0x3B, 0x06, 0x81, 0x00, 
    0x58, 0xA0, 0x2A, 0x52, 0xCF, 0xDC, 0xA2, 0xF2, 0xA4, 0x17, 0x1F, 0x13, 0x2D, 0xEF, 0xFB, 0x03, 
    0x4B, 0xE0, 0xE8, 0x8D, 0x87, 0xC5, 0x9A, 0x55, 0x63, 0xB9, 0x67, 0x44, 0x44, 0x44, 0xA3, 0xAE, 
    0x5F, 0x9F, 0x7B, 0xC3, 0x20, 0x10, 0x00, 0x0B, 0xD7, 0x13, 0x01, 0xB0, 0x6E, 0xED, 0xAA, 0xD8, 
    0x78, 0xC4, 0xDA, 0xDC, 0x33, 0x80, 0x01, 0x55, 0x45, 0xF4, 0xCC, 0x59, 0x80, 0x2A, 0x55, 0x3D, 
    0xF1, 0xB8, 0xDB, 0xEF, 0x04, 0xC0, 0x02, 0xAC, 0x6D, 0x5F, 0xB2, 0x36, 0x22, 0x5E, 0x96, 0x7B, 
    0x47, 0x44, 0xC4, 0x89, 0xC7, 0x6D, 0xF4, 0xAD, 0x7E, 0xC0, 0x92, 0x5A, 0xBF, 0x76, 0x55, 0xAF, 
    0x7C, 0x5F, 0xC0, 0x4F, 0xC4, 0x8D, 0x17, 0x0C, 0xE5, 0x1E, 0xD1, 0xEF, 0x04, 0xC0, 0x02, 0x1C, 
    0x8C, 0xFA, 0x9C, 0xE8, 0x81, 0x3F, 0xC3, 0xF5, 0xEB, 0x56, 0xC5, 0xDA, 0x55, 0x3D, 0xF1, 0x4B, 
    0x09, 0x0C, 0xB8, 0xE3, 0xFE, 0xCD, 0x86, 0xDC, 0x13, 0x22, 0x22, 0xC6, 0xC7, 0x76, 0x8C, 0x9E, 
    0x99, 0x7B, 0x44, 0xBF, 0xCB, 0xFE, 0xE4, 0xD5, 0xDF, 0xEA, 0x73, 0x72, 0x2F, 0x88, 0x88, 0x38, 
    0xBE, 0x37, 0x7E, 0x21, 0x81, 0x02, 0x1C, 0xB1, 0x7E, 0x75, 0x8C, 0x8F, 0xE6, 0xFF, 0x98, 0x71, 
    0xAA, 0xD3, 0x4F, 0xE6, 0xDE, 0xD0, 0xEF, 0x04, 0xC0, 0x82, 0x54, 0x67, 0xE7, 0x5E, 0xB0, 0x6A, 
    0xE5, 0x68, 0xAC, 0x5F, 0xBB, 0x2A, 0xF7, 0x0C, 0xA0, 0x14, 0x55, 0x15, 0x1B, 0x37, 0xE4, 0xBF, 
    0x2F, 0x40, 0x23, 0x52, 0xF6, 0xC7, 0xDF, 0x7E, 0x27, 0x00, 0x16, 0x26, 0xFB, 0x29, 0xA8, 0x17, 
    0x6C, 0xF0, 0x99, 0x7F, 0x60, 0x79, 0x6D, 0xDC, 0xB0, 0x3E, 0x72, 0x7F, 0x97, 0x5C, 0x1D, 0x71, 
    0x46, 0xD6, 0x01, 0x03, 0x40, 0x00, 0xCC, 0xD3, 0xE8, 0x7B, 0x2F, 0x3D, 0x3A, 0x22, 0x0E, 0xCF, 
    0xB9, 0xA1, 0xAA, 0x22, 0x36, 0xBA, 0xE9, 0x0F, 0xB0, 0xCC, 0x46, 0x87, 0x57, 0xC4, 0xBA, 0x35, 
    0x79, 0x3F, 0x12, 0x58, 0x45, 0x9C, 0x10, 0xED, 0x0B, 0x7A, 0xE3, 0x73, 0x89, 0x7D, 0x4A, 0x00, 
    0xCC, 0x53, 0xD5, 0x9D, 0x3B, 0x3D, 0xF7, 0x86, 0xC3, 0xD6, 0xAD, 0x8E, 0x15, 0x43, 0xBD, 0x71, 
    0x77, 0x2E, 0xA0, 0x2C, 0x87, 0xAF, 0x5F, 0x93, 0x7B, 0x42, 0x73, 0xAC, 0x31, 0xEA, 0x7B, 0x01, 
    0x16, 0x40, 0x00, 0xCC, 0x53, 0x8A, 0xC6, 0x09, 0xB9, 0x37, 0x1C, 0x71, 0x58, 0xF6, 0x5F, 0x40, 
    0xA0, 0x50, 0xEB, 0xD6, 0xAE, 0xCC, 0x3D, 0x21, 0x52, 0xAA, 0xB3, 0x3F, 0x0E, 0xF7, 0x33, 0x01, 
    0x30, 0x4F, 0x8D, 0x14, 0xC7, 0xE5, 0xDE, 0xB0, 0x7E, 0x4D, 0xFE, 0x5F, 0x40, 0xA0, 0x4C, 0x6B, 
    0x56, 0x8E, 0x47, 0xB3, 0x99, 0xF7, 0xCE, 0xA3, 0x55, 0x0F, 0x3C, 0x0E, 0xF7, 0x33, 0x01, 0x30, 
    0x4F, 0x29, 0xEA, 0x63, 0x73, 0x1E, 0x7F, 0x78, 0xC5, 0x50, 0x8C, 0x8F, 0x0E, 0xE7, 0x9C, 0x00, 
    0x14, 0xAC, 0xAA, 0x22, 0xD6, 0xAE, 0xCE, 0xFD, 0x16, 0x7C, 0x75, 0x7C, 0xE6, 0x01, 0x7D, 0x4D, 
    0x00, 0xCC, 0x5B, 0x95, 0xF5, 0x4B, 0xB2, 0xD7, 0xAD, 0x19, 0x77, 0xE7, 0x3F, 0x20, 0xAB, 0x95, 
    0xD9, 0xBF, 0x76, 0x3C, 0x65, 0x7D, 0x1C, 0xEE, 0x77, 0x02, 0x60, 0xFE, 0xB2, 0x7E, 0x03, 0xE0, 
    0xF8, 0xD8, 0x68, 0xCE, 0xC3, 0x03, 0xC4, 0x58, 0xF6, 0x00, 0xC8, 0xFB, 0x49, 0xAC, 0x7E, 0x27, 
    0x00, 0xE6, 0x2F, 0xEB, 0x7F, 0x78, 0x63, 0x4E, 0xFF, 0x03, 0x99, 0xF5, 0xC0, 0xDB, 0x90, 0x02, 
    0x60, 0x01, 0x04, 0xC0, 0x7C, 0x5C, 0xBF, 0x69, 0x38, 0x22, 0xB2, 0x5E, 0x81, 0x37, 0x3E, 0x96, 
    0xFD, 0x17, 0x0F, 0x28, 0xDC, 0xC8, 0x48, 0xF6, 0xC7, 0x21, 0x01, 0xB0, 0x00, 0x02, 0x60, 0x1E, 
    0xD6, 0xEE, 0x6A, 0x66, 0x3F, 0xFF, 0x3E, 0x96, 0xFF, 0x17, 0x0F, 0x28, 0xDC, 0x50, 0x2B, 0xFB, 
    0x53, 0x48, 0xF6, 0xC7, 0xE2, 0x7E, 0x96, 0xFD, 0x6F, 0xAF, 0x1F, 0xCD, 0x0D, 0xA5, 0xCC, 0xCF, 
    0xBE, 0x55, 0x34, 0xF3, 0xFF, 0xE2, 0x01, 0x85, 0xCB, 0xFD, 0x31, 0xC0, 0x88, 0x68, 0x44, 0xBB, 
    0xED, 0x6E, 0x68, 0xF3, 0xE4, 0x59, 0x64, 0x1E, 0xEA, 0x34, 0xB7, 0x22, 0xE7, 0xF1, 0x9B, 0x8D, 
    0x2A, 0xAA, 0xCC, 0xF7, 0xE1, 0x06, 0x68, 0x54, 0x55, 0x34, 0x72, 0x7F, 0x1A, 0x69, 0xFC, 0x80, 
    0xD3, 0xA1, 0xF3, 0x24, 0x00, 0xE6, 0x21, 0x75, 0x86, 0x87, 0x72, 0x1E, 0xBF, 0xD9, 0xF4, 0xD7, 
    0x06, 0xF4, 0x86, 0x46, 0xE6, 0xB3, 0x00, 0x6B, 0x3A, 0x93, 0x59, 0x5F, 0x90, 0xF5, 0x33, 0xCF, 
    0x24, 0x7D, 0x48, 0x00, 0x00, 0xB0, 0x50, 0x9E, 0x49, 0xFA, 0x90, 0x93, 0xFF, 0x00, 0x2C, 0x94, 
    0x00, 0x00, 0x80, 0x02, 0x09, 0x00, 0x00, 0x28, 0x90, 0x00, 0x00, 0x80, 0x02, 0x09, 0x00, 0x00, 
    0x28, 0xD0, 0x21, 0x6F, 0xA0, 0x30, 0x7E, 0xE5, 0x45, 0xA7, 0x45, 0x5D, 0x6D, 0x58, 0xEE, 0x31, 
    0x7D, 0xA3, 0xEE, 0x6E, 0x4C, 0xD2, 0x09, 0x20, 0xBB, 0xBA, 0xD3, 0x3C, 0x77, 0xBC, 0xBD, 0xE9, 
    0x40, 0xEE, 0x1D, 0x3D, 0xAD, 0x91, 0x76, 0x4C, 0x5E, 0xBE, 0xF5, 0xAE, 0xA7, 0xFF, 0xF8, 0x90, 
    0x01, 0x90, 0xEA, 0xEA, 0xF2, 0x88, 0x78, 0xE3, 0x92, 0x8F, 0xEA, 0x57, 0x8D, 0x94, 0x7B, 0x01, 
    0x00, 0x11, 0xD1, 0xED, 0x56, 0x9F, 0xCA, 0xBD, 0xA1, 0xE7, 0xD5, 0xD5, 0x27, 0x22, 0xE2, 0xFC, 
    0xA7, 0xFF, 0xD8, 0xEB, 0x58, 0x00, 0x28, 0x90, 0x00, 0x00, 0x80, 0x02, 0x09, 0x00, 0x00, 0x28, 
    0x90, 0x6F, 0x51, 0x22, 0xAB, 0xCF, 0x7E, 0xE1, 0xAB, 0xB9, 0x27, 0x40, 0x36, 0xAF, 0x7B, 0xCD, 
    0xCB, 0x72, 0x4F, 0xA0, 0x60, 0xCE, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 
    0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 
    0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 
    0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 
    0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 
    0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 
    0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 
    0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0xA8, 0x75, 0xC8, 0x9F, 0x56, 0xE9, 
    0xCE, 0x94, 0xAA, 0x75, 0xCB, 0xBC, 0xA5, 0x7F, 0xA4, 0x18, 0xAD, 0xAA, 0x38, 0x27, 0xF7, 0x0C, 
    0x80, 0xD2, 0xA5, 0x88, 0x5B, 0x22, 0xA2, 0x93, 0x7B, 0x47, 0x2F, 0xAB, 0xAA, 0x74, 0xE7, 0xA1, 
    0x7E, 0x7E, 0xC8, 0x00, 0x98, 0xDA, 0xBC, 0xF5, 0xAA, 0x88, 0xB8, 0x6A, 0x49, 0x17, 0xF5, 0xB1, 
    0x91, 0xF6, 0xA5, 0xC7, 0x57, 0xD1, 0x79, 0x20, 0xF7, 0x0E, 0x80, 0xD2, 0xAD, 0x18, 0xEE, 0xBC, 
    0x61, 0xEF, 0x6F, 0x7D, 0x78, 0x77, 0xEE, 0x1D, 0xFD, 0xC8, 0x5B, 0x00, 0x00, 0x50, 0x20, 0x01, 
    0x00, 0x00, 0x05, 0x12, 0x00, 0x00, 0x50, 0xA0, 0x43, 0x5F, 0x04, 0x08, 0x85, 0xB8, 0xE3, 0x6D, 
    0xEF, 0xCA, 0x3D, 0x81, 0x8C, 0xCE, 0xF8, 0xE8, 0xD5, 0xB9, 0x27, 0x40, 0x36, 0xCE, 0x00, 0x00, 
    0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 
    0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 
    0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 
    0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 
    0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 
    0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 
    0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 
    0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 
    0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 
    0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 
    0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 
    0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 
    0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 
    0x81, 0x5A, 0x87, 0xFA, 0xE1, 0x58, 0x7B, 0xD3, 0x4D, 0x11, 0xF1, 0xC6, 0x65, 0xDE, 0xD2, 0x47, 
    0x3A, 0xB9, 0x07, 0x00, 0x10, 0x11, 0x73, 0xB3, 0xAD, 0x5D, 0x63, 0xED, 0x4D, 0xB9, 0x67, 0xF4, 
    0xBA, 0x4F, 0x4C, 0xB5, 0xB7, 0x9C, 0xFF, 0xF4, 0x1F, 0x3A, 0x03, 0x00, 0x00, 0x05, 0x12, 0x00, 
    0x00, 0x50, 0x20, 0x01, 0x00, 0x00, 0x05, 0x12, 0x00, 0x00, 0x50, 0x20, 0x01, 0x00, 0x00, 0x05, 
    0x12, 0x00, 0x00, 0x50, 0x20, 0x01, 0x00, 0x00, 0x05, 0x12, 0x00, 0x00, 0x50, 0x20, 0x01, 0x00, 
    0x00, 0x05, 0x12, 0x00, 0x00, 0x50, 0x20, 0x01, 0x00, 0x00, 0x05, 0x12, 0x00, 0x00, 0x50, 0x20, 
    0x01, 0x00, 0x00, 0x05, 0x12, 0x00, 0x00, 0x50, 0x20, 0x01, 0x00, 0x00, 0x05, 0x12, 0x00, 0x00, 
    0x50, 0x20, 0x01, 0x00, 0x00, 0x05, 0x12, 0x00, 0x00, 0x50, 0x20, 0x01, 0x00, 0x00, 0x05, 0x12, 
    0x00, 0x00, 0x50, 0x20, 0x01, 0x00, 0x00, 0x05, 0x12, 0x00, 0x00, 0x50, 0x20, 0x01, 0x00, 0x00, 
    0x05, 0x12, 0x00, 0x00, 0x50, 0x20, 0x01, 0x00, 0x00, 0x05, 0x12, 0x00, 0x00, 0x50, 0x20, 0x01, 
    0x00, 0x00, 0x05, 0x12, 0x00, 0x00, 0x50, 0x20, 0x01, 0x00, 0x00, 0x05, 0x12, 0x00, 0x00, 0x50, 
    0x20, 0x01, 0x00, 0x00, 0x05, 0x6A, 0x1D, 0xEA, 0x87, 0x53, 0xED, 0x2D, 0xE7, 0x2F, 0xF7, 0x90, 
    0x7E, 0x32, 0xD2, 0xBE, 0xF4, 0xF8, 0x46, 0x74, 0x1E, 0xC8, 0xBD, 0x03, 0xA0, 0x74, 0x43, 0xC3, 
    0x9D, 0xF5, 0x7B, 0x7F, 0xEB, 0xC3, 0xBB, 0x73, 0xEF, 0xE8, 0x47, 0xCE, 0x00, 0x00, 0x40, 0x81, 
    0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 
    0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 
    0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 
    0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 
    0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 
    0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 
    0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 
    0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 
    0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 
    0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 
    0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 
    0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 
    0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x5A, 
    0xB9, 0x07, 0x40, 0x4E, 0x67, 0x7C, 0xF4, 0xEA, 0xDC, 0x13, 0x00, 0xB2, 0x70, 0x06, 0x00, 0x00, 
    0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x74, 0xC8, 0x6B, 0x00, 0xC6, 0xAE, 
    0xB8, 0xE8, 0xB2, 0x94, 0xAA, 0x73, 0x97, 0x7B, 0x4C, 0xDF, 0x48, 0x9D, 0xD1, 0xA8, 0x72, 0x8F, 
    0x00, 0xE0, 0xE0, 0x6C, 0xEB, 0x53, 0xA3, 0xED, 0x4D, 0x9D, 0xDC, 0x3B, 0x7A, 0x59, 0x55, 0xA5, 
    0x5B, 0xA6, 0x36, 0x6F, 0xBD, 0xEA, 0xE9, 0x3F, 0x3F, 0xF4, 0x45, 0x80, 0xA9, 0x3A, 0xBD, 0x8A, 
    0xF8, 0xE9, 0x25, 0x5F, 0xD5, 0xAF, 0x3C, 0xF9, 0x03, 0xF4, 0x84, 0x2A, 0xC2, 0x8B, 0xD5, 0x1F, 
    0x25, 0x55, 0xBB, 0x0F, 0xF5, 0x63, 0x6F, 0x01, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 
    0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 
    0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 
    0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 
    0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 
    0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 
    0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 
    0x00, 0x14, 0x48, 0x00, 0x00, 0x40, 0x81, 0x04, 0x00, 0x00, 0x14, 0xA8, 0x95, 0x7B, 0x00, 0x65, 
    0x7B, 0xDD, 0x6B, 0x5E, 0x96, 0x7B, 0x02, 0x40, 0x91, 0x9C, 0x01, 0x00, 0x80, 0x02, 0x09, 0x00, 
    0x00, 0x28, 0x90, 0x00, 0x00, 0x80, 0x02, 0x1D, 0xF2, 0x1A, 0x80, 0xAA, 0x91, 0xAE, 0x8C, 0xBA, 
    0xBA, 0x71, 0xB9, 0xC7, 0xF4, 0x8D, 0xBA, 0xDA, 0x98, 0x1A, 0xE9, 0xA3, 0xB9, 0x67, 0x00, 0x94, 
    0xAE, 0xD9, 0x4C, 0x6F, 0xA8, 0xBB, 0xD5, 0x81, 0xDC, 0x3B, 0x7A, 0x5A, 0x23, 0xED, 0x38, 0xD4, 
    0x8F, 0x0F, 0x19, 0x00, 0x93, 0x97, 0x6F, 0xBD, 0x2B, 0x22, 0xEE, 0x5A, 0xD2, 0x41, 0x7D, 0x6C, 
    0xA4, 0x7D, 0xE9, 0xF1, 0x8D, 0xE8, 0xE4, 0x9E, 0x01, 0x50, 0xBC, 0x46, 0xAB, 0x7B, 0xCB, 0xFE, 
    0xCB, 0x3E, 0xBC, 0x3B, 0xF7, 0x8E, 0x7E, 0xE4, 0x2D, 0x00, 0x00, 0x28, 0x90, 0x00, 0x00, 0x80, 
    0x02, 0x09, 0x00, 0x00, 0x28, 0x90, 0x00, 0x00, 0x80, 0x02, 0x09, 0x00, 0x00, 0x28, 0x90, 0x00, 
    0x98, 0x87, 0xAA, 0x35, 0x3B, 0x97, 0xF3, 0xF8, 0x29, 0xE7, 0xC1, 0x01, 0x7A, 0xC8, 0xDE, 0xD9, 
    0x2A, 0xEB, 0xE3, 0x71, 0x3F, 0x13, 0x00, 0xF3, 0xD0, 0xEC, 0xD4, 0xB3, 0x39, 0x8F, 0x5F, 0xD7, 
    0x12, 0x00, 0xE8, 0x0D, 0x75, 0xB7, 0x9B, 0x79, 0xC1, 0x91, 0x33, 0x99, 0x07, 0xF4, 0x2D, 0x01, 
    0x30, 0x0F, 0xAD, 0x18, 0x39, 0x98, 0xF3, 0xF8, 0xDD, 0xEC, 0xBF, 0x70, 0x00, 0x11, 0x75, 0x4A, 
    0x51, 0xA7, 0xAC, 0x2F, 0x48, 0xEA, 0x68, 0xB7, 0xDD, 0x94, 0x65, 0x9E, 0x04, 0xC0, 0x3C, 0xEC, 
    0x89, 0xB5, 0x53, 0x39, 0x8F, 0xDF, 0xE9, 0x26, 0x6F, 0x03, 0x00, 0xD9, 0xF5, 0xC0, 0x8B, 0x91, 
    0xE9, 0xDC, 0x03, 0xFA, 0x99, 0x00, 0x98, 0x8F, 0x76, 0xFB, 0x60, 0x44, 0xEC, 0xCB, 0x37, 0x20, 
    0xF5, 0xC2, 0x2F, 0x1E, 0x50, 0xB8, 0xB9, 0x4E, 0x9D, 0x7B, 0xC2, 0xAE, 0xDC, 0x03, 0xFA, 0x99, 
    0x00, 0x98, 0xB7, 0xB4, 0x33, 0xE7, 0xD1, 0xA7, 0x67, 0xB2, 0xBE, 0x0B, 0x01, 0x10, 0x33, 0x33, 
    0x59, 0x2F, 0x87, 0x8A, 0x88, 0x34, 0x91, 0x79, 0x40, 0x5F, 0x13, 0x00, 0xF3, 0x56, 0x65, 0x0D, 
    0x80, 0xC9, 0xA9, 0xDC, 0xBF, 0x78, 0x40, 0xE9, 0x26, 0xA7, 0xF3, 0x3E, 0x0E, 0xA5, 0xA8, 0x9C, 
    0x01, 0x58, 0x00, 0x01, 0x30, 0x6F, 0xD5, 0xB7, 0x73, 0x1E, 0x7D, 0x6A, 0xDA, 0x85, 0xAF, 0x40, 
    0x5E, 0x53, 0xF9, 0x5F, 0x88, 0x3C, 0x9A, 0x7B, 0x40, 0x3F, 0x13, 0x00, 0xF3, 0x94, 0xA2, 0xDE, 
    0x96, 0xF3, 0xF8, 0x93, 0x93, 0x02, 0x00, 0xC8, 0xEB, 0xC0, 0x54, 0xDE, 0x6B, 0xF0, 0xAA, 0x88, 
    0x6F, 0x65, 0x1D, 0xD0, 0xE7, 0x04, 0xC0, 0x3C, 0x55, 0x11, 0x59, 0x03, 0x60, 0xD7, 0x5E, 0x5F, 
    0x7F, 0x0D, 0xE4, 0x93, 0x52, 0xC4, 0x9E, 0x7D, 0x93, 0x99, 0x57, 0x54, 0x02, 0x60, 0x01, 0x04, 
    0xC0, 0x3C, 0x55, 0x55, 0xBA, 0x2F, 0xE7, 0xF1, 0x67, 0x0F, 0xCE, 0xC5, 0xA4, 0xB7, 0x01, 0x80, 
    0x4C, 0xF6, 0x1E, 0x98, 0x8C, 0x6E, 0x37, 0xEF, 0xA7, 0x00, 0xAA, 0x2A, 0xEF, 0x0B, 0xB1, 0x7E, 
    0x27, 0x00, 0xE6, 0xA9, 0x4A, 0xDD, 0x3B, 0x72, 0x6F, 0xD8, 0xBD, 0x27, 0x77, 0x7D, 0x03, 0xA5, 
    0xDA, 0xB5, 0xBB, 0x07, 0xCE, 0x42, 0xA6, 0xCE, 0x3D, 0xB9, 0x27, 0xF4, 0x33, 0x01, 0x30, 0x4F, 
    0x07, 0xDA, 0xFF, 0xF3, 0x89, 0x88, 0xD8, 0x9E, 0x73, 0xC3, 0x93, 0xBB, 0xF6, 0xE6, 0x3C, 0x3C, 
    0x50, 0xB0, 0x89, 0x5D, 0x19, 0x6F, 0x85, 0xF2, 0x1D, 0x3B, 0x27, 0xDB, 0x1F, 0xCA, 0xFA, 0x18, 
    0xDC, 0xEF, 0x04, 0xC0, 0xC2, 0x64, 0x3D, 0x0B, 0x30, 0xB1, 0x6B, 0x5F, 0xCC, 0x75, 0xDC, 0x05, 
    0x13, 0x58, 0x5E, 0x53, 0x33, 0x07, 0x63, 0x77, 0xE6, 0xF7, 0xFF, 0x53, 0xC4, 0xDD, 0x59, 0x07, 
    0x0C, 0x00, 0x01, 0xB0, 0x20, 0xD5, 0xAD, 0x39, 0x8F, 0x5E, 0xA7, 0x14, 0xDB, 0x9F, 0xD8, 0x9D, 
    0x73, 0x02, 0x50, 0xA0, 0xC7, 0x77, 0xEC, 0x8A, 0xFC, 0xDF, 0x4B, 0x9A, 0xBE, 0x9C, 0x79, 0x40, 
    0xDF, 0x13, 0x00, 0x0B, 0x50, 0x45, 0xFA, 0x87, 0xDC, 0x1B, 0x1E, 0xDB, 0xE1, 0x3E, 0x18, 0xC0, 
    0x32, 0x4A, 0x29, 0xB6, 0x3F, 0xD1, 0x03, 0x8F, 0x3B, 0x55, 0x64, 0x7D, 0x01, 0x36, 0x08, 0x04, 
    0xC0, 0x02, 0x4C, 0x8E, 0x0F, 0x7F, 0x31, 0x22, 0xB2, 0x9E, 0x83, 0xDF, 0xBB, 0x7F, 0x2A, 0x76, 
    0xEF, 0x75, 0x31, 0x20, 0xB0, 0x3C, 0x9E, 0xD8, 0xB5, 0x2F, 0xFB, 0x1D, 0x00, 0x23, 0x22, 0xA2, 
    0x39, 0x24, 0x00, 0x16, 0x48, 0x00, 0x2C, 0xC4, 0xBB, 0xAF, 0x9E, 0x8C, 0x88, 0xDB, 0x73, 0xCF, 
    0xD8, 0xF6, 0x6D, 0xD7, 0xC1, 0x00, 0xCB, 0x63, 0xDB, 0xC3, 0xBD, 0xF0, 0x78, 0x93, 0x1E, 0x9C, 
    0xFE, 0x9D, 0x6B, 0xDC, 0x05, 0x70, 0x81, 0x04, 0xC0, 0x42, 0x55, 0xE9, 0x33, 0xB9, 0x27, 0xEC, 
    0xDC, 0xB5, 0x2F, 0xF6, 0x1D, 0xC8, 0xFA, 0x0D, 0xC5, 0x40, 0x01, 0x26, 0xF6, 0xEC, 0x8B, 0xBD, 
    0xFB, 0x7B, 0xE1, 0xB1, 0xA6, 0xF1, 0xD9, 0xDC, 0x0B, 0x06, 0x81, 0x00, 0x58, 0xA8, 0x94, 0xFE, 
    0x2A, 0xF7, 0x84, 0x88, 0x88, 0xFB, 0xB6, 0x3D, 0x9E, 0x7B, 0x02, 0x30, 0xC0, 0x52, 0xF4, 0xCE, 
    0xE3, 0x4C, 0xAA, 0x42, 0x00, 0x2C, 0x02, 0x01, 0xB0, 0x40, 0x53, 0xED, 0x1B, 0xBE, 0x1A, 0x91, 
    0xB2, 0x9F, 0x8A, 0x9A, 0xD8, 0xBD, 0x2F, 0x76, 0xEC, 0xDC, 0x93, 0x7B, 0x06, 0x30, 0xA0, 0x1E, 
    0x79, 0x7C, 0x67, 0xEC, 0xEB, 0x89, 0x57, 0xFF, 0x31, 0x37, 0x32, 0x3C, 0xF3, 0xF7, 0xB9, 0x47, 
    0x0C, 0x02, 0x01, 0xB0, 0x70, 0xA9, 0x8A, 0xEA, 0xA6, 0xDC, 0x23, 0x22, 0x22, 0xBE, 0xF9, 0xC0, 
    0x23, 0xD1, 0xC9, 0x7C, 0x6B, 0x4E, 0x60, 0xF0, 0xCC, 0x75, 0x3A, 0x71, 0xFF, 0x43, 0x8F, 0xE5, 
    0x9E, 0xF1, 0x94, 0xBF, 0xDF, 0xFD, 0x9B, 0xBF, 0xEF, 0x2E, 0x68, 0x8B, 0x40, 0x00, 0x2C, 0x82, 
    0x3A, 0xE2, 0x4F, 0x73, 0x6F, 0x88, 0x88, 0x98, 0x99, 0x9D, 0x8B, 0xFB, 0xB7, 0xF5, 0xCC, 0x2F, 
    0x29, 0x30, 0x20, 0xBE, 0x71, 0xFF, 0x23, 0x31, 0x37, 0xD7, 0xCD, 0x3D, 0xE3, 0xBB, 0xAA, 0x4F, 
    0xE4, 0x5E, 0x30, 0x28, 0x04, 0xC0, 0x22, 0x98, 0x6E, 0x6F, 0xF9, 0x52, 0x64, 0xFE, 0x76, 0xC0, 
    0xA7, 0x3C, 0xFC, 0xD8, 0xCE, 0x78, 0x62, 0x42, 0x1C, 0x03, 0x8B, 0xE3, 0x91, 0xC7, 0x27, 0xE2, 
    0xF1, 0xDE, 0xB9, 0xE1, 0x58, 0xA7, 0x19, 0x43, 0x7F, 0x9E, 0x7B, 0xC4, 0xA0, 0x10, 0x00, 0x8B, 
    0x23, 0x45, 0x55, 0xFD, 0x61, 0xEE, 0x11, 0xDF, 0x91, 0xE2, 0xEE, 0x6F, 0x7E, 0x2B, 0xA6, 0x67, 
    0x0E, 0xE6, 0x1E, 0x02, 0xF4, 0xB9, 0x03, 0x93, 0xD3, 0xF1, 0xCD, 0x07, 0x1E, 0xC9, 0x3D, 0xE3, 
    0x07, 0xA4, 0xCF, 0xEE, 0x6F, 0x7F, 0x60, 0x67, 0xEE, 0x15, 0x83, 0x42, 0x00, 0x2C, 0x96, 0x56, 
    0xE3, 0x23, 0x91, 0xF9, 0xA6, 0x40, 0x4F, 0xE9, 0x74, 0xBA, 0xF1, 0xB5, 0x7B, 0x1F, 0x8C, 0x6E, 
    0xB7, 0x57, 0x4E, 0xD9, 0x01, 0xFD, 0xE6, 0xE0, 0xDC, 0x5C, 0x7C, 0xED, 0xDE, 0x6D, 0xD1, 0xAD, 
    0x7B, 0xE7, 0xBA, 0xA2, 0x54, 0xC5, 0x47, 0x72, 0x6F, 0x18, 0x24, 0x02, 0x60, 0x91, 0x4C, 0xBD, 
    0xE7, 0xDA, 0xC7, 0x23, 0xD2, 0x5F, 0xE4, 0xDE, 0xF1, 0x94, 0xFD, 0x07, 0xA6, 0xE3, 0xAB, 0xF7, 
    0x6C, 0x8B, 0x3A, 0xE5, 0xBE, 0x5F, 0x37, 0xD0, 0x6F, 0x3A, 0xDD, 0x3A, 0xBE, 0x72, 0xF7, 0x83, 
    0x31, 0xD5, 0x0B, 0x77, 0xFC, 0xFB, 0xBE, 0x27, 0xA7, 0xD3, 0xE1, 0x3D, 0xF3, 0x18, 0x3B, 0x08, 
    0x04, 0xC0, 0x22, 0xAA, 0x23, 0x5D, 0x9B, 0x7B, 0xC3, 0x0F, 0xDA, 0xB5, 0x67, 0x7F, 0xDC, 0xFD, 
    0x8D, 0x87, 0xB2, 0x7F, 0x65, 0x07, 0xD0, 0x3F, 0xEA, 0x94, 0xE2, 0x8E, 0x7B, 0x1F, 0xEC, 0x95, 
    0x8F, 0xFC, 0x7D, 0x4F, 0x8A, 0xF8, 0xE3, 0x68, 0xB7, 0xBD, 0xB7, 0xB9, 0x88, 0x04, 0xC0, 0x22, 
    0x9A, 0x69, 0xDF, 0xF0, 0x85, 0x88, 0xDE, 0xFA, 0x82, 0x8A, 0xED, 0x4F, 0xEE, 0x89, 0x3B, 0xEE, 
    0x79, 0xB0, 0xA7, 0x4E, 0xE3, 0x01, 0xBD, 0xA9, 0x5B, 0xD7, 0xF1, 0xB5, 0xBB, 0x1F, 0x8C, 0x89, 
    0xDD, 0xFB, 0x73, 0x4F, 0x79, 0xBA, 0x4E, 0x44, 0x63, 0x6B, 0xEE, 0x11, 0x83, 0x46, 0x00, 0x2C, 
    0xB2, 0x14, 0xF1, 0x81, 0xDC, 0x1B, 0x9E, 0xEE, 0x89, 0x89, 0xBD, 0xF1, 0x95, 0xBB, 0x1E, 0x70, 
    0x4D, 0x00, 0xF0, 0x8C, 0xE6, 0x3A, 0xDD, 0xF8, 0xE7, 0x3B, 0xEE, 0x8F, 0x9D, 0xBB, 0xF7, 0xE5, 
    0x9E, 0xF2, 0x43, 0xAA, 0x88, 0x9B, 0xA6, 0xDB, 0xD7, 0x3D, 0x9C, 0x7B, 0xC7, 0xA0, 0x11, 0x00, 
    0x8B, 0x6C, 0x3A, 0x0E, 0xFB, 0x64, 0x44, 0xDC, 0x9D, 0x7B, 0xC7, 0xD3, 0xED, 0xDE, 0x7B, 0x20, 
    0x6E, 0xBB, 0xE3, 0x3E, 0x9F, 0x0E, 0x00, 0x7E, 0xC8, 0xE4, 0xD4, 0x74, 0xDC, 0xF6, 0xD5, 0x6F, 
    0xC6, 0x9E, 0xFD, 0x3D, 0xF9, 0xCD, 0xA2, 0x29, 0x35, 0xAA, 0x9E, 0x7B, 0x61, 0x35, 0x08, 0x9A, 
    0xB9, 0x07, 0x0C, 0x9C, 0x9B, 0x6F, 0x4E, 0xAD, 0xF3, 0xCE, 0xDE, 0x51, 0x45, 0xBC, 0x39, 0xF7, 
    0x94, 0xA7, 0x3B, 0x78, 0xB0, 0x13, 0x8F, 0x6E, 0xDF, 0x15, 0x63, 0xA3, 0x2B, 0x62, 0xE5, 0xF8, 
    0x68, 0xEE, 0x39, 0x40, 0x0F, 0x78, 0x7C, 0xC7, 0xAE, 0xF8, 0xEA, 0x3D, 0xDB, 0x62, 0x76, 0xAE, 
    0x27, 0x3E, 0xC4, 0x74, 0x08, 0xD5, 0x5F, 0x4D, 0x6D, 0xBE, 0x5E, 0x00, 0x2C, 0x01, 0x01, 0xB0, 
    0x04, 0x3A, 0x37, 0xDF, 0xF6, 0x8D, 0xA1, 0xF3, 0xCE, 0xFE, 0xC5, 0x88, 0x78, 0x41, 0xEE, 0x2D, 
    0x4F, 0x97, 0x52, 0x8A, 0x1D, 0x3B, 0xF7, 0xC4, 0xDC, 0x5C, 0x27, 0xD6, 0xAE, 0x59, 0x15, 0x8D, 
    0x46, 0x95, 0x7B, 0x12, 0x90, 0x41, 0xA7, 0xD3, 0x89, 0x7B, 0xEE, 0xFB, 0x76, 0x3C, 0xF0, 0xAD, 
    0xED, 0x91, 0x7A, 0xF7, 0xD3, 0x42, 0x29, 0x22, 0xBD, 0x75, 0xEE, 0xE6, 0xDB, 0xDC, 0xE2, 0x74, 
    0x09, 0xB4, 0x72, 0x0F, 0x18, 0x50, 0xA9, 0x51, 0x55, 0xEF, 0xAE, 0x53, 0xEA, 0xD9, 0x2F, 0xAC, 
    0x78, 0xEA, 0x8E, 0x81, 0x27, 0x1D, 0x7F, 0x4C, 0x6C, 0x38, 0x62, 0x6D, 0xEE, 0x39, 0xC0, 0x72, 
    0x49, 0x29, 0x1E, 0x7B, 0x62, 0x57, 0xFC, 0xCB, 0x83, 0x8F, 0xC5, 0xC1, 0x9E, 0x7D, 0xD5, 0xFF, 
    0x3D, 0x9F, 0x9E, 0x6A, 0x6F, 0xFD, 0x72, 0xEE, 0x11, 0x83, 0xCA, 0x19, 0x80, 0x25, 0x72, 0xF0, 
    0xE6, 0x2F, 0x3D, 0x34, 0x74, 0xDE, 0xD9, 0xA7, 0x47, 0xC4, 0x8F, 0xE5, 0xDE, 0xF2, 0x4C, 0x3A, 
    0xDD, 0x3A, 0x76, 0xEC, 0xDC, 0x13, 0x7B, 0xF6, 0x4D, 0xC6, 0xCA, 0xF1, 0x91, 0x18, 0x5E, 0x31, 
    0x94, 0x7B, 0x12, 0xB0, 0x84, 0x76, 0xEF, 0x9D, 0x8C, 0xBB, 0xBE, 0xF1, 0x50, 0x3C, 0xFC, 0xD8, 
    0xCE, 0x7E, 0xF8, 0x64, 0xD0, 0x5C, 0x37, 0xEA, 0x37, 0x74, 0x6F, 0xBE, 0x7D, 0x22, 0xF7, 0x90, 
    0x41, 0xE5, 0x0C, 0xC0, 0x12, 0xAA, 0x9B, 0xE9, 0x5D, 0x8D, 0x6E, 0xF5, 0xFA, 0x88, 0x18, 0xC9, 
    0xBD, 0xE5, 0xD9, 0x4C, 0xEC, 0xDE, 0x1F, 0x13, 0xBB, 0xBF, 0x19, 0x87, 0xAF, 0x5B, 0x1D, 0xC7, 
    0xBD, 0xF0, 0xA8, 0x58, 0xB7, 0x66, 0x3C, 0xF7, 0x24, 0x60, 0x11, 0x4D, 0xEC, 0xDE, 0x1F, 0x0F, 
    0x3E, 0xFC, 0x78, 0xEC, 0xDE, 0xDB, 0x93, 0x17, 0xF9, 0x1D, 0x52, 0x15, 0x71, 0xC3, 0x6C, 0xFB, 
    0x86, 0x7F, 0xC9, 0xBD, 0x63, 0x90, 0x39, 0x03, 0xB0, 0x84, 0x3A, 0x9F, 0xBF, 0x6D, 0xCF, 0xD0, 
    0x6B, 0x5F, 0x19, 0x11, 0xF1, 0x53, 0xB9, 0xB7, 0x3C, 0x17, 0x53, 0x33, 0xB3, 0xF1, 0xD8, 0x8E, 
    0x89, 0xD8, 0xB9, 0x6B, 0x5F, 0xD4, 0x29, 0xC5, 0xD8, 0xC8, 0x48, 0x34, 0x9B, 0x3E, 0x28, 0x02, 
    0xFD, 0x68, 0xF6, 0xE0, 0x5C, 0x3C, 0xF2, 0xF8, 0x44, 0xDC, 0x7B, 0xDF, 0xC3, 0xF1, 0xAD, 0x47, 
    0x9E, 0x88, 0x99, 0xD9, 0xB9, 0xDC, 0x93, 0x9E, 0x8F, 0x27, 0x5B, 0xD1, 0x7A, 0xD3, 0xEC, 0xCD, 
    0xB7, 0x4E, 0xE7, 0x1E, 0x32, 0xC8, 0x5C, 0x01, 0xB6, 0xD4, 0x6E, 0xBC, 0x60, 0x68, 0xEC, 0xF1, 
    0xE1, 0xDB, 0x23, 0xE2, 0x8C, 0xDC, 0x53, 0x9E, 0xAF, 0x46, 0x55, 0xC5, 0x61, 0xEB, 0x56, 0xC7, 
    0xE1, 0x87, 0xAD, 0x8E, 0xF5, 0x6B, 0x56, 0xC6, 0xF8, 0x58, 0x4F, 0x9F, 0xC8, 0x80, 0xB2, 0xA5, 
    0x14, 0x07, 0xA6, 0x66, 0x63, 0x62, 0xCF, 0xFE, 0xD8, 0xB9, 0x6B, 0x6F, 0xEC, 0xDA, 0x7D, 0x20, 
    0x52, 0x9F, 0xDE, 0x07, 0xB4, 0xAA, 0xAA, 0xB7, 0x4D, 0x6E, 0xBE, 0xFE, 0x4F, 0x72, 0xEF, 0x18, 
    0x74, 0x02, 0x60, 0x19, 0x8C, 0xB5, 0x2F, 0x7A, 0x79, 0x44, 0xF5, 0xC5, 0xE8, 0xF3, 0xB7, 0x5C, 
    0x86, 0x57, 0x0C, 0xC5, 0xBA, 0xEF, 0x86, 0xC0, 0xF8, 0xD8, 0x70, 0x8C, 0x8F, 0x8E, 0xC4, 0xC8, 
    0xC8, 0x50, 0x0C, 0x35, 0x9B, 0x11, 0x95, 0xFF, 0x94, 0x60, 0x39, 0xA4, 0x88, 0xE8, 0xCC, 0x75, 
    0x63, 0x7A, 0x66, 0x36, 0xA6, 0xA6, 0x67, 0xE2, 0xC0, 0xD4, 0x6C, 0x4C, 0x4E, 0xCD, 0xC4, 0xEE, 
    0xBD, 0x93, 0x71, 0x70, 0xAE, 0xAF, 0x5E, 0xE5, 0x3F, 0x93, 0xCF, 0x4D, 0xB5, 0xB7, 0xFC, 0x6C, 
    0xEE, 0x11, 0x25, 0xF0, 0xA8, 0xBD, 0x4C, 0xC6, 0xAE, 0xB8, 0x68, 0x73, 0xA4, 0xAA, 0x9D, 0x7B, 
    0xC7, 0x52, 0x69, 0x36, 0x1A, 0xD1, 0x6C, 0x36, 0xA2, 0xE5, 0x2D, 0x03, 0x58, 0x12, 0x9D, 0x6E, 
    0x8A, 0x6E, 0xB7, 0xDB, 0x0F, 0x17, 0xEF, 0x2D, 0xC4, 0x81, 0x6E, 0x33, 0xCE, 0x9C, 0xBD, 0x6C, 
    0xCB, 0x03, 0xB9, 0x87, 0x94, 0xA0, 0xAF, 0x5F, 0x91, 0xF6, 0x93, 0xA9, 0x74, 0xF8, 0x55, 0xE3, 
    0x31, 0xF1, 0xDA, 0x14, 0x71, 0x6E, 0xEE, 0x2D, 0x4B, 0xA1, 0x5B, 0xD7, 0xD1, 0xAD, 0xEB, 0x38, 
    0x38, 0x10, 0x2F, 0x40, 0x80, 0x4C, 0xDE, 0xE1, 0xC9, 0x7F, 0xF9, 0x38, 0x03, 0xB0, 0x8C, 0x46, 
    0xDA, 0x97, 0x1C, 0xDB, 0x88, 0xEE, 0x57, 0x22, 0x62, 0x5D, 0xEE, 0x2D, 0x00, 0x3D, 0xE6, 0xCF, 
    0xA7, 0xDA, 0x5B, 0xDE, 0x90, 0x7B, 0x44, 0x49, 0x9C, 0xAF, 0x5D, 0x46, 0x33, 0xED, 0x6B, 0x1F, 
    0xAA, 0xAA, 0xFA, 0xCD, 0x11, 0xE1, 0x5B, 0x79, 0x00, 0xBE, 0xEF, 0xE1, 0x66, 0xAC, 0xF8, 0x8D, 
    0xDC, 0x23, 0x4A, 0xE3, 0x63, 0x80, 0xCB, 0x6C, 0xEE, 0xE6, 0xDB, 0x1F, 0x1C, 0x7A, 0xED, 0x2B, 
    0xAA, 0x88, 0xEA, 0xBC, 0xDC, 0x5B, 0x00, 0x7A, 0xC0, 0x6C, 0x44, 0xFA, 0xB9, 0xC9, 0xF6, 0x75, 
    0xF7, 0xE7, 0x1E, 0x52, 0x1A, 0x67, 0x00, 0x32, 0x98, 0x4A, 0x87, 0x5F, 0x15, 0x11, 0x9F, 0xCC, 
    0xBD, 0x03, 0x20, 0xBF, 0xEA, 0x62, 0xB7, 0xFB, 0xCD, 0xC3, 0x35, 0x00, 0xB9, 0x7C, 0xF0, 0xD2, 
    0xD1, 0xB1, 0x7D, 0x9D, 0xCF, 0x45, 0xC4, 0x39, 0xB9, 0xA7, 0x00, 0xE4, 0x50, 0x45, 0x5C, 0x3B, 
    0xD9, 0xDE, 0x72, 0x69, 0xEE, 0x1D, 0xA5, 0x72, 0x06, 0x20, 0x97, 0x77, 0x5E, 0x33, 0xDD, 0x58, 
    0x11, 0xBF, 0x1C, 0x11, 0xAE, 0x78, 0x05, 0x4A, 0xF4, 0xE9, 0xC9, 0x53, 0xB6, 0xBF, 0x2B, 0xF7, 
    0x88, 0x92, 0x09, 0x80, 0x8C, 0x0E, 0xFC, 0xF6, 0x96, 0x27, 0xEB, 0x66, 0xFA, 0xD9, 0x88, 0x78, 
    0x24, 0xF7, 0x16, 0x80, 0x65, 0x74, 0xEB, 0xD4, 0xF8, 0xF0, 0xBF, 0x8F, 0x37, 0xDD, 0xE4, 0x82, 
    0xE8, 0x8C, 0x04, 0x40, 0x66, 0x33, 0x97, 0x6D, 0xDD, 0xD6, 0x6D, 0x56, 0x3F, 0x15, 0x11, 0xDB, 
    0x73, 0x6F, 0x01, 0x58, 0x06, 0x77, 0xB5, 0xA2, 0xF5, 0x0B, 0xF1, 0xEE, 0xAB, 0xFB, 0xE7, 0x9B, 
    0x89, 0x06, 0x94, 0x6B, 0x00, 0x7A, 0xC4, 0xF8, 0x95, 0x17, 0x9D, 0x96, 0xEA, 0xEA, 0x6F, 0x23, 
    0x62, 0x43, 0xEE, 0x2D, 0x00, 0x4B, 0xA1, 0x8A, 0xF8, 0x97, 0x88, 0xEE, 0xB9, 0x93, 0xED, 0x0F, 
    0x79, 0xC1, 0xD3, 0x03, 0x9C, 0x01, 0xE8, 0x11, 0x93, 0x97, 0x6F, 0xBD, 0xAB, 0xD9, 0x6C, 0x9C, 
    0x1B, 0x11, 0xDF, 0xCE, 0xBD, 0x05, 0x60, 0xF1, 0xA5, 0xAF, 0xA7, 0x48, 0xAF, 0xF5, 0xE4, 0xDF, 
    0x3B, 0x04, 0x40, 0x0F, 0xD9, 0x7F, 0xD9, 0x75, 0xDF, 0xAC, 0x9B, 0xE9, 0xDC, 0x88, 0xF0, 0x79, 
    0x58, 0x60, 0x90, 0x7C, 0xA5, 0x19, 0xC3, 0xAF, 0x99, 0x6A, 0x6F, 0x7D, 0x2C, 0xF7, 0x10, 0xBE, 
    0x4F, 0x00, 0xF4, 0x98, 0x99, 0xCB, 0xB6, 0x6E, 0x6B, 0x45, 0xEB, 0xEC, 0x2A, 0xD2, 0x17, 0x72, 
    0x6F, 0x01, 0x58, 0xA8, 0x14, 0xF1, 0x77, 0xC3, 0x23, 0xB3, 0x3F, 0xB5, 0xBF, 0xFD, 0x81, 0x9D, 
    0xB9, 0xB7, 0xF0, 0xAF, 0xB9, 0x13, 0x60, 0x0F, 0x9A, 0xBD, 0xF9, 0xD6, 0xE9, 0xB9, 0xF3, 0x4E, 
    0xF9, 0xBF, 0x2B, 0x62, 0xF8, 0x25, 0x11, 0xF1, 0xD2, 0xDC, 0x7B, 0x00, 0xE6, 0xE9, 0x8F, 0xA7, 
    0x37, 0xCE, 0xBE, 0x65, 0xE6, 0x92, 0xDF, 0x9F, 0xCA, 0x3D, 0x84, 0x1F, 0xE6, 0x22, 0xC0, 0xDE, 
    0x56, 0x8D, 0x5F, 0x71, 0xF1, 0x6F, 0xA6, 0x94, 0xAE, 0x0A, 0xB1, 0x06, 0xF4, 0x8F, 0x6E, 0x55, 
    0xC5, 0x7B, 0x26, 0x37, 0x6F, 0x79, 0x7F, 0x44, 0xA4, 0xDC, 0x63, 0x38, 0x34, 0x01, 0xD0, 0x07, 
    0xC6, 0xDB, 0x9B, 0x5E, 0x97, 0x22, 0x3E, 0x16, 0x11, 0x87, 0xE5, 0xDE, 0x02, 0xF0, 0x23, 0x4C, 
    0x54, 0x55, 0xFD, 0xAB, 0x93, 0x9B, 0x6F, 0xF8, 0xDB, 0xDC, 0x43, 0x78, 0x76, 0x02, 0xA0, 0x4F, 
    0x8C, 0xB6, 0x37, 0x1D, 0x13, 0x11, 0x1F, 0xAD, 0x22, 0x5E, 0x9B, 0x7B, 0x0B, 0xC0, 0x33, 0xF8, 
    0xC7, 0xBA, 0x55, 0xFF, 0x87, 0x99, 0xDF, 0xB9, 0xE1, 0x5B, 0xB9, 0x87, 0xF0, 0xA3, 0x39, 0xAD, 
    0xDC, 0x27, 0x3A, 0x37, 0xDF, 0xB6, 0xAF, 0x73, 0xDE, 0xEB, 0xFF, 0x64, 0x45, 0x4C, 0xCD, 0x44, 
    0x54, 0xE7, 0x86, 0xBF, 0x3B, 0xA0, 0x77, 0x74, 0x23, 0xAA, 0xAB, 0xA6, 0xE2, 0xB0, 0x5F, 0xEF, 
    0x5C, 0xFE, 0x7B, 0xBB, 0x73, 0x8F, 0xE1, 0xB9, 0x71, 0x06, 0xA0, 0x0F, 0x8D, 0xB7, 0xDF, 0x71, 
    0x7A, 0x8A, 0xFA, 0x0F, 0x22, 0xE2, 0xC7, 0x73, 0x6F, 0x01, 0x8A, 0x77, 0x6F, 0x6A, 0xD4, 0x6F, 
    0x9F, 0xBE, 0xFC, 0x86, 0x2F, 0xE6, 0x1E, 0xC2, 0xF3, 0x23, 0x00, 0xFA, 0xD5, 0xC7, 0xCF, 0x6F, 
    0x8E, 0x7F, 0xFD, 0xA8, 0x4B, 0x52, 0x8A, 0x2B, 0x22, 0x62, 0x3C, 0xF7, 0x1C, 0xA0, 0x38, 0x07, 
    0x23, 0xAA, 0xF7, 0x4D, 0xAD, 0x4F, 0xEF, 0x8B, 0x8B, 0xB7, 0xCC, 0xE6, 0x1E, 0xC3, 0xF3, 0x27, 
    0x00, 0xFA, 0xDC, 0x58, 0xFB, 0xA2, 0x17, 0x44, 0xC4, 0xE6, 0x88, 0xEA, 0xED, 0xE1, 0xBE, 0x0E, 
    0xC0, 0xF2, 0xF8, 0x5C, 0xA3, 0x51, 0x5F, 0x72, 0xE0, 0xF2, 0x1B, 0xEE, 0xC9, 0x3D, 0x84, 0xF9, 
    0x13, 0x00, 0x03, 0x62, 0xB4, 0x7D, 0xF1, 0x39, 0x55, 0xA4, 0xF7, 0x47, 0xC4, 0xAB, 0x73, 0x6F, 
    0x01, 0x06, 0xD6, 0xBD, 0x51, 0xA5, 0x77, 0x4D, 0x6D, 0xDE, 0xFA, 0x99, 0xDC, 0x43, 0x58, 0x38, 
    0x01, 0x30, 0x60, 0xC6, 0xDB, 0x9B, 0x7E, 0x26, 0x45, 0xBC, 0x2F, 0x22, 0x5E, 0x9E, 0x7B, 0x0B, 
    0x30, 0x30, 0x1E, 0x8A, 0xA8, 0xDE, 0x37, 0x75, 0xCA, 0xE3, 0x7F, 0xE8, 0x2B, 0x7C, 0x07, 0x87, 
    0x00, 0x18, 0x4C, 0xD5, 0x58, 0xFB, 0xE2, 0x9F, 0x4F, 0x91, 0xDE, 0x5D, 0x45, 0x9C, 0x97, 0x7B, 
    0x0C, 0xD0, 0xB7, 0xEE, 0xAC, 0xAA, 0xEA, 0xEA, 0xC9, 0xB4, 0xFE, 0xFF, 0x44, 0xBB, 0xDD, 0xC9, 
    0x3D, 0x86, 0xC5, 0x25, 0x00, 0x06, 0xDC, 0xD8, 0x95, 0xEF, 0xF8, 0xF1, 0x54, 0xA7, 0x8B, 0xAB, 
    0x48, 0x6F, 0x8C, 0x88, 0x91, 0xDC, 0x7B, 0x80, 0x9E, 0x57, 0x47, 0xC4, 0xDF, 0x54, 0x11, 0xD7, 
    0x4E, 0xB6, 0xB7, 0xFC, 0x6D, 0xB8, 0x93, 0xDF, 0xC0, 0x12, 0x00, 0x85, 0x58, 0xDD, 0xBE, 0x74, 
    0xFD, 0x5C, 0x74, 0xDE, 0x56, 0x45, 0xFC, 0x7A, 0x44, 0x9C, 0x96, 0x7B, 0x0F, 0xD0, 0x73, 0xBE, 
    0x15, 0x51, 0xFD, 0x71, 0x8A, 0xEA, 0x23, 0xD3, 0xED, 0xEB, 0x1E, 0xCE, 0x3D, 0x86, 0xA5, 0x27, 
    0x00, 0x0A, 0xB4, 0xF2, 0xCA, 0x0B, 0x5F, 0x5A, 0xD7, 0xCD, 0x37, 0x57, 0x91, 0xDE, 0x9C, 0x22, 
    0x5E, 0x92, 0x7B, 0x0F, 0x90, 0xCD, 0x63, 0x55, 0x54, 0x37, 0xD5, 0x11, 0x1F, 0x9F, 0x6E, 0x5F, 
    0xFF, 0xC5, 0xF0, 0x6A, 0xBF, 0x28, 0x02, 0xA0, 0x70, 0xC3, 0x57, 0x5D, 0x7C, 0x62, 0xA3, 0xAE, 
    0x5F, 0x5F, 0xA5, 0xEA, 0xF5, 0xF1, 0x9D, 0x4F, 0x10, 0xB8, 0xA7, 0x00, 0x0C, 0xAE, 0xB9, 0x2A, 
    0xE2, 0xD6, 0x14, 0xF1, 0xD7, 0x11, 0xF5, 0x5F, 0x4F, 0xB5, 0x6F, 0xF8, 0x6A, 0x78, 0xD2, 0x2F, 
    0x96, 0x00, 0xE0, 0xFB, 0xDA, 0xED, 0xD6, 0x68, 0x4C, 0x9C, 0x15, 0x55, 0x7A, 0x75, 0x23, 0x35, 
    0x5E, 0x55, 0x47, 0x3A, 0xBD, 0x8A, 0x38, 0x21, 0xDC, 0x76, 0x18, 0xFA, 0xD5, 0x43, 0x11, 0x71, 
    0x67, 0x54, 0xD5, 0x6D, 0x75, 0x95, 0xFE, 0x61, 0x66, 0x65, 0xEB, 0xB6, 0x78, 0xE7, 0x35, 0xD3, 
    0xB9, 0x47, 0xD1, 0x1B, 0x04, 0x00, 0xCF, 0xAE, 0x7D, 0xC1, 0xD8, 0x58, 0x63, 0xF4, 0xA5, 0x29, 
    0xD5, 0x27, 0x54, 0x51, 0x1D, 0x1F, 0x29, 0x8E, 0x8B, 0x48, 0xC7, 0x44, 0xC4, 0x11, 0x11, 0x71, 
    0xF8, 0x77, 0xFF, 0x37, 0x96, 0x77, 0x24, 0x14, 0x69, 0x2A, 0x22, 0x26, 0x22, 0xD2, 0x44, 0x44, 
    0xE3, 0xC9, 0x88, 0xF4, 0x68, 0x44, 0x6C, 0xAB, 0xAA, 0x6A, 0x5B, 0x5D, 0x75, 0xEF, 0x1F, 0xAD, 
    0x1B, 0xF7, 0xEC, 0x6A, 0x6F, 0xD9, 0x97, 0x7B, 0x24, 0xBD, 0x4B, 0x00, 0xB0, 0x68, 0xD6, 0xBC, 
    0xEF, 0xBF, 0xAC, 0x7B, 0xB6, 0x7F, 0x5E, 0x77, 0x9A, 0xE7, 0x76, 0xBB, 0xD5, 0xA7, 0x96, 0x6B, 
    0xCF, 0xD3, 0xA5, 0x88, 0x5B, 0x56, 0x0C, 0x77, 0xDE, 0x90, 0xEB, 0xF8, 0x4B, 0x61, 0x6E, 0xB6, 
    0xB5, 0x2B, 0xE7, 0xF1, 0x87, 0x86, 0x3B, 0xEB, 0x73, 0x1E, 0x7F, 0xB1, 0x1D, 0x9C, 0x6D, 0x7D, 
    0xAA, 0x8A, 0x38, 0x37, 0xD7, 0xF1, 0x9B, 0xCD, 0xF4, 0x86, 0x46, 0xAB, 0x7B, 0xCB, 0xB3, 0xFD, 
    0x3B, 0x7B, 0x7F, 0xEB, 0xC3, 0xBE, 0x6C, 0x87, 0x45, 0xD1, 0xCA, 0x3D, 0x80, 0xC1, 0xF1, 0xA3, 
    0x1E, 0x98, 0xC6, 0xDB, 0x9B, 0x0E, 0x2C, 0xD7, 0x96, 0x67, 0xD0, 0x19, 0xB4, 0x07, 0xCF, 0xB1, 
    0xF6, 0xA6, 0xAC, 0xC7, 0x1F, 0xB4, 0x3F, 0xCF, 0xD1, 0xF6, 0xA6, 0xAC, 0x9F, 0x75, 0xAF, 0xBB, 
    0xD5, 0x81, 0xFD, 0x97, 0x0D, 0xD6, 0x9F, 0x29, 0xBD, 0xCB, 0xBD, 0xE3, 0x01, 0xA0, 0x40, 0x02, 
    0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 
    0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 
    0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 
    0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 
    0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 
    0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 
    0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 
    0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 
    0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 
    0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 
    0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 
    0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 
    0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 
    0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 
    0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 
    0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 
    0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 
    0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 
    0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 
    0x40, 0x02, 0x00, 0x00, 0x0A, 0x24, 0x00, 0x00, 0xA0, 0x40, 0xAD, 0xDC, 0x03, 0x28, 0x48, 0x23, 
    0xED, 0x88, 0xBA, 0xFA, 0x44, 0xAE, 0xC3, 0x57, 0x55, 0xBA, 0x33, 0xD7, 0xB1, 0x97, 0x50, 0xB6, 
    0x3F, 0xCF, 0x41, 0x54, 0x55, 0xE9, 0x96, 0x48, 0xD5, 0xEE, 0x6C, 0x03, 0x1A, 0x69, 0x47, 0xB6, 
    0x63, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD0, 0x1F, 0xFE, 0x3F, 0x42, 
    0xED, 0xF2, 0xB2, 0x2C, 0x7E, 0x8D, 0x9F, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 
    0x42, 0x60, 0x82
  };
  
  server.send_P(200, "image/png", (const char*)favicon, sizeof(favicon));
}
